{
"version":3,
"file":"module$node_modules$lodash$_createFlow.js",
"lineCount":35,
"mappings":"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",
"sources":["node_modules/lodash/_createFlow.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_createFlow\"] = function(global,require,module,exports) {\nvar LodashWrapper = require('./_LodashWrapper'),\n    flatRest = require('./_flatRest'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    isArray = require('./isArray'),\n    isLaziable = require('./_isLaziable');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return flatRest(function(funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      var func = funcs[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? index : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) &&\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n            !data[4].length && data[9] == 1\n          ) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func))\n          ? wrapper[funcName]()\n          : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\nmodule.exports = createFlow;\n\n};"],
"names":["shadow$provide","global","require","module","exports","LodashWrapper","flatRest","getData","getFuncName","isArray","isLaziable","createFlow","fromRight","funcs","length","index","prereq","prototype","thru","reverse","func","TypeError","FUNC_ERROR_TEXT","wrapper","funcName","data","undefined","apply","args","arguments","value","plant","result","call"]
}
