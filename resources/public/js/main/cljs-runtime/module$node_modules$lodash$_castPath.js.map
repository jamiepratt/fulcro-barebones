{
"version":3,
"file":"module$node_modules$lodash$_castPath.js",
"lineCount":7,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,GAAyD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAC7FC,UAAUH,OAAA,CAAQ,oCAAR,CADmF,EAE7FI,QAAQJ,OAAA,CAAQ,mCAAR,CAFqF,EAG7FK,eAAeL,OAAA,CAAQ,0CAAR,CAH8E,EAI7FM,WAAWN,OAAA,CAAQ,qCAAR,CAJkF;AAqBjGC,QAAOC,CAAAA,OAAP,GAPAK,QAAiB,CAACC,KAAD,EAAQC,MAAR,CAAgB;AAC/B,WAAIN,OAAA,CAAQK,KAAR,CAAJ,GACSA,KADT,GAGOJ,KAAA,CAAMI,KAAN,EAAaC,MAAb,CAAA,GAAuB,CAACD,KAAD,CAAvB,GAAiCH,YAAA,CAAaC,QAAA,CAASE,KAAT,CAAb,CAHxC;AAD+B,GAOjC;AArBiG,CAAjG;;",
"sources":["node_modules/lodash/_castPath.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_castPath\"] = function(global,require,module,exports) {\nvar isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n\n};"],
"names":["shadow$provide","global","require","module","exports","isArray","isKey","stringToPath","toString","castPath","value","object"]
}
