shadow$provide.module$node_modules$victory_bar$lib$bar_helper_methods = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.getStyle = exports.getCornerRadius = exports.getBarWidth = void 0;
  var _isPlainObject2 = function(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }(require("module$node_modules$lodash$isPlainObject")), _victoryCore = require("module$node_modules$victory_core$lib$index");
  exports.getBarWidth = (barWidth, props) => {
    const {scale, data, style} = props;
    if (barWidth) {
      return _victoryCore.Helpers.evaluateProp(barWidth, props);
    }
    if (style.width) {
      return style.width;
    }
    barWidth = scale.x.range();
    barWidth = Math.abs(barWidth[1] - barWidth[0]);
    const bars = data.length + 2;
    return Math.max(1, (props.barRatio || 0.5) * (2 > data.length ? 8 : barWidth / bars));
  };
  const getCornerRadiusFromObject = (cornerRadius, props) => {
    const realCornerRadius = {topLeft:0, topRight:0, bottomLeft:0, bottomRight:0}, updateCornerRadius = (corner, fallback) => {
      _victoryCore.Helpers.isNil(cornerRadius[corner]) ? _victoryCore.Helpers.isNil(cornerRadius[fallback]) || (realCornerRadius[corner] = _victoryCore.Helpers.evaluateProp(cornerRadius[fallback], props)) : realCornerRadius[corner] = _victoryCore.Helpers.evaluateProp(cornerRadius[corner], props);
    };
    updateCornerRadius("topLeft", "top");
    updateCornerRadius("topRight", "top");
    updateCornerRadius("bottomLeft", "bottom");
    updateCornerRadius("bottomRight", "bottom");
    return realCornerRadius;
  };
  exports.getCornerRadius = (cornerRadius, props) => {
    const realCornerRadius = {topLeft:0, topRight:0, bottomLeft:0, bottomRight:0};
    if (!cornerRadius) {
      return realCornerRadius;
    }
    if ((0,_isPlainObject2.default)(cornerRadius)) {
      return getCornerRadiusFromObject(cornerRadius, props);
    }
    realCornerRadius.topLeft = _victoryCore.Helpers.evaluateProp(cornerRadius, props);
    realCornerRadius.topRight = _victoryCore.Helpers.evaluateProp(cornerRadius, props);
    return realCornerRadius;
  };
  exports.getStyle = function(style, props) {
    void 0 === style && (style = {});
    return props.disableInlineStyles ? {} : _victoryCore.Helpers.evaluateStyle(Object.assign({fill:"black", stroke:style.fill || "black"}, style), props);
  };
};

//# sourceMappingURL=module$node_modules$victory_bar$lib$bar_helper_methods.js.map
