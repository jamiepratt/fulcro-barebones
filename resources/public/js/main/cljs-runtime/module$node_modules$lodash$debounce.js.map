{
"version":3,
"file":"module$node_modules$lodash$debounce.js",
"lineCount":71,
"mappings":"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",
"sources":["node_modules/lodash/debounce.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$debounce\"] = function(global,require,module,exports) {\nvar isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n\n};"],
"names":["shadow$provide","global","require","module","exports","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","invokeFunc","time","args","lastArgs","thisArg","lastThis","undefined","lastInvokeTime","result","apply","shouldInvoke","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","timerExpired","trailingEdge","setTimeout","timeWaiting","timerId","trailing","debounced","isInvoking","arguments","leading","clearTimeout","TypeError","FUNC_ERROR_TEXT","cancel","flush"]
}
