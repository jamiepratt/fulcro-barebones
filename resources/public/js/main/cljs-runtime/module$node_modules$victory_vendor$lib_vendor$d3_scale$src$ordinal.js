shadow$provide.module$node_modules$victory_vendor$lib_vendor$d3_scale$src$ordinal = function(global, require, module, exports) {
  function ordinal() {
    function scale(d) {
      let i = index.get(d);
      if (void 0 === i) {
        if (unknown !== implicit) {
          return unknown;
        }
        index.set(d, i = domain.push(d) - 1);
      }
      return range[i % range.length];
    }
    var index = new _index.InternMap(), domain = [], range = [], unknown = implicit;
    scale.domain = function(_) {
      if (!arguments.length) {
        return domain.slice();
      }
      domain = [];
      index = new _index.InternMap();
      for (const value of _) {
        index.has(value) || index.set(value, domain.push(value) - 1);
      }
      return scale;
    };
    scale.range = function(_) {
      return arguments.length ? (range = Array.from(_), scale) : range.slice();
    };
    scale.unknown = function(_) {
      return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
      return ordinal(domain, range).unknown(unknown);
    };
    _init.initRange.apply(scale, arguments);
    return scale;
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = ordinal;
  exports.implicit = void 0;
  var _index = require("module$node_modules$victory_vendor$lib_vendor$d3_array$src$index"), _init = require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$init");
  const implicit = exports.implicit = Symbol("implicit");
};

//# sourceMappingURL=module$node_modules$victory_vendor$lib_vendor$d3_scale$src$ordinal.js.map
