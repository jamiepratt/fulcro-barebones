shadow$provide.module$node_modules$victory_vendor$lib_vendor$d3_scale$src$linear = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function linearish(scale) {
    var domain = scale.domain;
    scale.ticks = function(count) {
      var d = domain();
      return (0,_index.ticks)(d[0], d[d.length - 1], null == count ? 10 : count);
    };
    scale.tickFormat = function(count, specifier) {
      var d = domain();
      return (0,_tickFormat.default)(d[0], d[d.length - 1], null == count ? 10 : count, specifier);
    };
    scale.nice = function(count) {
      null == count && (count = 10);
      var d = domain(), i0 = 0, i1 = d.length - 1, start = d[i0], stop = d[i1], maxIter = 10;
      if (stop < start) {
        var step = start;
        start = stop;
        stop = step;
        step = i0;
        i0 = i1;
        i1 = step;
      }
      for (; 0 < maxIter--;) {
        step = (0,_index.tickIncrement)(start, stop, count);
        if (step === prestep) {
          return d[i0] = start, d[i1] = stop, domain(d);
        }
        if (0 < step) {
          start = Math.floor(start / step) * step, stop = Math.ceil(stop / step) * step;
        } else if (0 > step) {
          start = Math.ceil(start * step) / step, stop = Math.floor(stop * step) / step;
        } else {
          break;
        }
        var prestep = step;
      }
      return scale;
    };
    return scale;
  }
  function linear() {
    var scale = (0,_continuous.default)();
    scale.copy = function() {
      return (0,_continuous.copy)(scale, linear());
    };
    _init.initRange.apply(scale, arguments);
    return linearish(scale);
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = linear;
  exports.linearish = linearish;
  var _index = require("module$node_modules$victory_vendor$lib_vendor$d3_array$src$index"), _continuous = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$continuous")), _init = require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$init"), _tickFormat = function(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }(require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$tickFormat"));
};

//# sourceMappingURL=module$node_modules$victory_vendor$lib_vendor$d3_scale$src$linear.js.map
