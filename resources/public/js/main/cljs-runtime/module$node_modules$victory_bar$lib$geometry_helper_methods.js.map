{
"version":3,
"file":"module$node_modules$victory_bar$lib$geometry_helper_methods.js",
"lineCount":51,
"mappings":"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",
"sources":["node_modules/victory-bar/lib/geometry-helper-methods.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$victory_bar$lib$geometry_helper_methods\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.point = exports.circle = void 0;\n/**\n * A point in the 2d plane\n */\nconst point = (x, y) => ({\n  x,\n  y,\n  distance(p1) {\n    return Math.sqrt(Math.pow(this.x - p1.x, 2) + Math.pow(this.y - p1.y, 2));\n  },\n  // vector addition in 2d plane\n  add(p1) {\n    return point(this.x + p1.x, this.y + p1.y);\n  },\n  // vector subtraction in 2d\n  // returns p0 - p1\n  subtract(p1) {\n    return point(this.x - p1.x, this.y - p1.y);\n  },\n  // multiply a 2d point by a scalar\n  scalarMult(n) {\n    return point(this.x * n, this.y * n);\n  },\n  scalarDivide(n) {\n    if (n === 0) {\n      throw new Error(\"Division by 0 error\");\n    }\n    return point(this.x / n, this.y / n);\n  },\n  equals(p1) {\n    return this.x === p1.x && this.y === p1.y;\n  }\n});\nexports.point = point;\n/**\n * A circle in the 2d plane\n */\nconst circle = (center, radius) => ({\n  center,\n  radius,\n  hasIntersection(circle1) {\n    const P0 = this.center;\n    const P1 = circle1.center;\n    const r0 = this.radius;\n    const r1 = circle1.radius;\n    const d = P0.distance(P1);\n    if (d > r0 + r1) {\n      return false; // separate circles\n    }\n    if (d < Math.abs(r0 - r1)) {\n      return false; // one circle contains another\n    }\n    return true;\n  },\n  equals(circle1) {\n    const P0 = this.center;\n    const P1 = circle1.center;\n    const r0 = this.radius;\n    const r1 = circle1.radius;\n    return r0 === r1 && P0.equals(P1);\n  },\n  // Source: http://paulbourke.net/geometry/circlesphere/\n  // \"Intersection of two circles\" by Paul Bourke\n  // Left-most point is returned as 0th element of array\n  // Right-most point is returned as 1st elemennt of array\n  intersection(circle1) {\n    // eslint-disable-line max-statements\n    const P0 = this.center;\n    const P1 = circle1.center;\n    const r0 = this.radius;\n    const r1 = circle1.radius;\n    const d = P0.distance(P1);\n    if (!this.hasIntersection(circle1) || this.equals(circle1)) {\n      return [];\n    }\n    const a = (Math.pow(r0, 2) - Math.pow(r1, 2) + Math.pow(d, 2)) / (2 * d);\n    const h = Math.sqrt(Math.pow(r0, 2) - Math.pow(a, 2));\n    const P2 = P0.add(P1.subtract(P0).scalarMult(a).scalarDivide(d));\n    const {\n      x: x0,\n      y: y0\n    } = P0;\n    const {\n      x: x1,\n      y: y1\n    } = P1;\n    const {\n      x: x2,\n      y: y2\n    } = P2;\n    const P3s = [point(x2 - h * (y1 - y0) / d, y2 + h * (x1 - x0) / d), point(x2 + h * (y1 - y0) / d, y2 - h * (x1 - x0) / d)];\n    P3s.sort((Point1, Point2) => Point1.x - Point2.x);\n    return P3s;\n  },\n  solveX(y) {\n    const sqrt = Math.sqrt(Math.pow(this.radius, 2) - Math.pow(y - this.center.y, 2));\n    return [this.center.x - sqrt, this.center.x + sqrt];\n  },\n  solveY(x) {\n    const sqrt = Math.sqrt(Math.pow(this.radius, 2) - Math.pow(x - this.center.x, 2));\n    return [this.center.y - sqrt, this.center.y + sqrt];\n  }\n});\nexports.circle = circle;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","point","circle","x","y","distance","p1","Math","sqrt","pow","add","subtract","scalarMult","n","scalarDivide","Error","equals","center","radius","hasIntersection","circle1","r0","r1","d","abs","P0","P1","intersection","a","h","P2","x0","y0","x1","y1","x2","y2","P3s","sort","Point1","Point2","solveX","solveY"]
}
