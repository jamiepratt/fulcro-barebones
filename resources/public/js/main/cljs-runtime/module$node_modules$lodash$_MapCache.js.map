{
"version":3,
"file":"module$node_modules$lodash$_MapCache.js",
"lineCount":20,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,GAAyD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAcjGC,UAASA,SAAQ,CAACC,OAAD,CAAU;AAAA,QACrBC,QAAQ,CAAC,CADY,EAErBC,SAAoB,IAAX,IAAAF,OAAA,GAAkB,CAAlB,GAAsBA,OAAQE,CAAAA,MAFlB;AAKzB,SADA,IAAKC,CAAAA,KAAL,EACA,EAAO,EAAEF,KAAT,GAAiBC,MAAjB,CAAA,CAAyB;AACvB,UAAIE,QAAQJ,OAAA,CAAQC,KAAR,CAAZ;AACA,UAAKI,CAAAA,GAAL,CAASD,KAAA,CAAM,CAAN,CAAT,EAAmBA,KAAA,CAAM,CAAN,CAAnB,CAAA;AAFuB;AALA;AAbvBE,QAAAA,GAAgBV,OAAA,CAAQ,2CAAR,CAAhBU;AACAC,SAAAA,GAAiBX,OAAA,CAAQ,4CAAR,CAAjBW;AAF6F,MAG7FC,cAAcZ,OAAA,CAAQ,yCAAR,CAH+E,EAI7Fa,cAAcb,OAAA,CAAQ,yCAAR,CAJ+E;AAK7Fc,SAAAA,GAAcd,OAAA,CAAQ,yCAAR,CAAdc;AAqBJX,UAASY,CAAAA,SAAUR,CAAAA,KAAnB,GAA2BG,MAA3B;AACAP,UAASY,CAAAA,SAAT,CAAmB,QAAnB,CAAA,GAA+BJ,OAA/B;AACAR,UAASY,CAAAA,SAAUC,CAAAA,GAAnB,GAAyBJ,WAAzB;AACAT,UAASY,CAAAA,SAAUE,CAAAA,GAAnB,GAAyBJ,WAAzB;AACAV,UAASY,CAAAA,SAAUN,CAAAA,GAAnB,GAAyBK,OAAzB;AAEAb,QAAOC,CAAAA,OAAP,GAAiBC,QAAjB;AAhCiG,CAAjG;;",
"sources":["node_modules/lodash/_MapCache.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_MapCache\"] = function(global,require,module,exports) {\nvar mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n\n};"],
"names":["shadow$provide","global","require","module","exports","MapCache","entries","index","length","clear","entry","set","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","prototype","get","has"]
}
