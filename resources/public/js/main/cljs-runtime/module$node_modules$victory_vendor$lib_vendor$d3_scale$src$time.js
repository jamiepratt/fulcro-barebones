shadow$provide.module$node_modules$victory_vendor$lib_vendor$d3_scale$src$time = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function date(t) {
    return new Date(t);
  }
  function number(t) {
    return t instanceof Date ? +t : +new Date(+t);
  }
  function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
    function tickFormat(date) {
      return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
    }
    var scale = (0,_continuous.default)(), invert = scale.invert, domain = scale.domain, formatMillisecond = format(".%L"), formatSecond = format(":%S"), formatMinute = format("%I:%M"), formatHour = format("%I %p"), formatDay = format("%a %d"), formatWeek = format("%b %d"), formatMonth = format("%B"), formatYear = format("%Y");
    scale.invert = function(y) {
      return new Date(invert(y));
    };
    scale.domain = function(_) {
      return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
    };
    scale.ticks = function(interval) {
      var d = domain();
      return ticks(d[0], d[d.length - 1], null == interval ? 10 : interval);
    };
    scale.tickFormat = function(count, specifier) {
      return null == specifier ? tickFormat : format(specifier);
    };
    scale.nice = function(interval) {
      var d = domain();
      interval && "function" === typeof interval.range || (interval = tickInterval(d[0], d[d.length - 1], null == interval ? 10 : interval));
      return interval ? domain((0,_nice.default)(d, interval)) : scale;
    };
    scale.copy = function() {
      return (0,_continuous.copy)(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
    };
    return scale;
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.calendar = calendar;
  exports.default = function() {
    return _init.initRange.apply(calendar(_index.timeTicks, _index.timeTickInterval, _index.timeYear, _index.timeMonth, _index.timeWeek, _index.timeDay, _index.timeHour, _index.timeMinute, _index.timeSecond, _index2.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
  };
  var _index = require("module$node_modules$victory_vendor$lib_vendor$d3_time$src$index"), _index2 = require("module$node_modules$victory_vendor$lib_vendor$d3_time_format$src$index"), _continuous = function(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }(require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$continuous")), _init = require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$init"), _nice = function(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }(require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$nice"));
};

//# sourceMappingURL=module$node_modules$victory_vendor$lib_vendor$d3_scale$src$time.js.map
