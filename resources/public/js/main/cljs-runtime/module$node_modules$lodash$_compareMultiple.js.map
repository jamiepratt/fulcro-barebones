{
"version":3,
"file":"module$node_modules$lodash$_compareMultiple.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,CAAA,2CAAA,GAAgE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACxG,MAAIC,mBAAmBH,OAAA,CAAQ,8CAAR,CAAvB;AA2CAC,QAAOC,CAAAA,OAAP,GA3BAE,QAAwB,CAACC,MAAD,EAASC,KAAT,EAAgBC,MAAhB,CAAwB;AAO9C,SAP8C,IAC1CC,QAAQ,CAAC,CADiC,EAE1CC,cAAcJ,MAAOK,CAAAA,QAFqB,EAG1CC,cAAcL,KAAMI,CAAAA,QAHsB,EAI1CE,SAASH,WAAYG,CAAAA,MAJqB,EAK1CC,eAAeN,MAAOK,CAAAA,MAE1B,EAAO,EAAEJ,KAAT,GAAiBI,MAAjB,CAAA,CAAyB;AACvB,UAAIE,SAASX,gBAAA,CAAiBM,WAAA,CAAYD,KAAZ,CAAjB,EAAqCG,WAAA,CAAYH,KAAZ,CAArC,CAAb;AACA,UAAIM,MAAJ;AACE,eAAIN,KAAJ,IAAaK,YAAb,GACSC,MADT,GAIOA,MAJP,IAI0B,MAAT,IADLP,MAAAQ,CAAOP,KAAPO,CACK,GAAkB,CAAC,CAAnB,GAAuB,CAJxC,CAAA;AADF;AAFuB;AAiBzB,WAAOV,MAAOG,CAAAA,KAAd,GAAsBF,KAAME,CAAAA,KAA5B;AAxB8C,GA2BhD;AA5CwG,CAAxG;;",
"sources":["node_modules/lodash/_compareMultiple.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_compareMultiple\"] = function(global,require,module,exports) {\nvar compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n\n};"],
"names":["shadow$provide","global","require","module","exports","compareAscending","compareMultiple","object","other","orders","index","objCriteria","criteria","othCriteria","length","ordersLength","result","order"]
}
