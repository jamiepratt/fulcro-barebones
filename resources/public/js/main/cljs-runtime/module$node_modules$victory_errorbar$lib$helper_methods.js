shadow$provide.module$node_modules$victory_errorbar$lib$helper_methods = function(global, require, module, exports) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.getDomain = exports.getData = exports.getBaseProps = void 0;
  var _assign2 = _interopRequireDefault(require("module$node_modules$lodash$assign")), _defaults2 = _interopRequireDefault(require("module$node_modules$lodash$defaults")), _victoryCore = require("module$node_modules$victory_core$lib$index");
  const getErrors = (props, datum, axis) => {
    const errors = datum[{x:"_errorX", y:"_errorY"}[axis]];
    if (0 === errors) {
      return !1;
    }
    props = props.scale[axis];
    return Array.isArray(errors) ? [0 === errors[0] ? !1 : props(errors[0] + datum[`_${axis}`]), 0 === errors[1] ? !1 : props(datum[`_${axis}`] - errors[1])] : [props(errors + datum[`_${axis}`]), props(datum[`_${axis}`] - errors)];
  }, getData = props => {
    const accessorTypes = ["x", "y", "errorX", "errorY"];
    if (props.data) {
      return _victoryCore.Data.formatData(props.data, props, accessorTypes);
    }
    const generatedData = props.errorX || props.errorY ? _victoryCore.Data.generateData(props) : [];
    return _victoryCore.Data.formatData(generatedData, props, accessorTypes);
  };
  exports.getData = getData;
  const getDomainFromData = (props, axis) => {
    var minDomain = _victoryCore.Domain.getMinFromProps(props, axis), maxDomain = _victoryCore.Domain.getMaxFromProps(props, axis);
    const dataset = getData(props);
    if (1 > dataset.length) {
      return void 0 !== minDomain && void 0 !== maxDomain ? _victoryCore.Domain.getDomainFromMinMax(minDomain, maxDomain) : void 0;
    }
    const error = "x" === axis ? "_errorX" : "_errorY";
    props = type => {
      const errorIndex = "min" === type ? 1 : 0, sign = "min" === type ? -1 : 1;
      return dataset.reduce((memo, datum) => {
        const currentError = Array.isArray(datum[error]) ? datum[error][errorIndex] : datum[error];
        datum = datum[`_${axis}`] + sign * (currentError || 0);
        return memo < datum && "min" === type || memo > datum && "max" === type ? memo : datum;
      }, "min" === type ? Infinity : -Infinity);
    };
    minDomain = void 0 !== minDomain ? minDomain : props("min");
    maxDomain = void 0 !== maxDomain ? maxDomain : props("max");
    return _victoryCore.Domain.getDomainFromMinMax(minDomain, maxDomain);
  }, getDomain = (props, axis) => _victoryCore.Domain.createDomainFunction(getDomainFromData)(props, axis);
  exports.getDomain = getDomain;
  const getCalculatedValues = props => {
    var defaultStyles = _victoryCore.Helpers.getDefaultStyles(props, "errorbar");
    defaultStyles = _victoryCore.Helpers.getStyles(props.style, defaultStyles) || {};
    const data = getData(props);
    var JSCompiler_object_inline_x_1136 = _victoryCore.Helpers.getRange(props, "x"), JSCompiler_object_inline_y_1137 = _victoryCore.Helpers.getRange(props, "y");
    const domain = {x:getDomain(props, "x"), y:getDomain(props, "y")};
    JSCompiler_object_inline_x_1136 = {x:_victoryCore.Scale.getBaseScale(props, "x").domain(domain.x).range(props.horizontal ? JSCompiler_object_inline_y_1137 : JSCompiler_object_inline_x_1136), y:_victoryCore.Scale.getBaseScale(props, "y").domain(domain.y).range(props.horizontal ? JSCompiler_object_inline_x_1136 : JSCompiler_object_inline_y_1137)};
    props = props.polar ? props.origin || _victoryCore.Helpers.getPolarOrigin(props) : void 0;
    return {domain, data, scale:JSCompiler_object_inline_x_1136, style:defaultStyles, origin:props};
  }, getLabelProps = (dataProps, text, style) => {
    const {x, y, index, scale, errorY, errorX, horizontal, labelComponent, theme, disableInlineStyles} = dataProps, getError = function(type) {
      void 0 === type && (type = "x");
      const baseError = "y" === type ? errorY : errorX;
      return (baseError && Array.isArray(baseError) ? baseError[0] : baseError) || dataProps[type];
    };
    style = style.labels || {};
    const padding = style.padding || 0, textAnchor = horizontal ? "start" : "middle", verticalAnchor = horizontal ? "middle" : "end";
    text = {style, y:horizontal ? y : getError("y"), x:horizontal ? getError("x") : x, dy:horizontal ? 0 : -padding, dx:horizontal ? padding : 0, text, index, scale, datum:dataProps.datum, data:dataProps.data, textAnchor:style.textAnchor || textAnchor, verticalAnchor:style.verticalAnchor || verticalAnchor, angle:style.angle, horizontal, disableInlineStyles};
    return _victoryCore.Helpers.isTooltip(labelComponent) ? (0,_defaults2.default)({}, text, _victoryCore.Helpers.omit(theme && theme.tooltip || {}, ["style"])) : text;
  };
  exports.getBaseProps = (initialProps, fallbackProps) => {
    initialProps = _victoryCore.Helpers.modifyProps(initialProps, fallbackProps, "errorbar");
    const props = Object.assign({}, initialProps, getCalculatedValues(initialProps)), {borderWidth, data, domain, events, groupComponent, height, horizontal, labels, name, origin, padding, polar, scale, sharedEvents, standalone, style, theme, width, disableInlineStyles} = props;
    return data.reduce((childProps, datum, index) => {
      const eventKey = _victoryCore.Helpers.isNil(datum.eventKey) ? index : datum.eventKey, {x, y} = _victoryCore.Helpers.scalePoint((0,_assign2.default)({}, props, {scale}), datum);
      var JSCompiler_inline_result = _victoryCore.Collection.getMinValue(domain.x);
      var maxDomainX = _victoryCore.Collection.getMaxValue(domain.x), minDomainY = _victoryCore.Collection.getMinValue(domain.y);
      const maxDomainY = _victoryCore.Collection.getMaxValue(domain.y);
      let {_x, _y} = datum;
      if (_x < JSCompiler_inline_result || _x > maxDomainX || _y < minDomainY || _y > maxDomainY) {
        _x = _y = null;
      }
      JSCompiler_inline_result = Object.assign({}, datum, {_x, _y});
      maxDomainX = getErrors(props, JSCompiler_inline_result, "x");
      minDomainY = getErrors(props, JSCompiler_inline_result, "y");
      JSCompiler_inline_result = {borderWidth, data, datum:JSCompiler_inline_result, errorX:horizontal ? minDomainY : maxDomainX, errorY:horizontal ? maxDomainX : minDomainY, groupComponent, horizontal, index, scale, style:disableInlineStyles ? {} : style.data, x, y, disableInlineStyles};
      childProps[eventKey] = {data:JSCompiler_inline_result};
      datum = _victoryCore.LabelHelpers.getText(props, datum, index);
      if (void 0 !== datum && null !== datum || labels && (events || sharedEvents)) {
        childProps[eventKey].labels = getLabelProps(Object.assign({}, props, JSCompiler_inline_result), datum, style);
      }
      return childProps;
    }, {parent:{data, domain, height, horizontal, name, origin, padding, polar, scale, standalone, style:style.parent, theme, width}});
  };
};

//# sourceMappingURL=module$node_modules$victory_errorbar$lib$helper_methods.js.map
