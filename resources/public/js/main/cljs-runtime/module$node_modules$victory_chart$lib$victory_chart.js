shadow$provide.module$node_modules$victory_chart$lib$victory_chart = function(global, require, module, exports) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.VictoryChart = void 0;
  var _isEmpty2 = _interopRequireDefault(require("module$node_modules$lodash$isEmpty")), _defaults2 = _interopRequireDefault(require("module$node_modules$lodash$defaults")), _react = _interopRequireDefault(require("module$node_modules$react$index")), _victoryCore = require("module$node_modules$victory_core$lib$index"), _victorySharedEvents = require("module$node_modules$victory_shared_events$lib$index");
  global = require("module$node_modules$victory_axis$lib$index");
  module = require("module$node_modules$victory_polar_axis$lib$index");
  var _helperMethods = require("module$node_modules$victory_chart$lib$helper_methods");
  require = _interopRequireDefault(require("module$node_modules$react_fast_compare$index"));
  const fallbackProps = {width:450, height:300, padding:50}, defaultProps = {backgroundComponent:_react.default.createElement(_victoryCore.Background, null), containerComponent:_react.default.createElement(_victoryCore.VictoryContainer, null), defaultAxes:{independent:_react.default.createElement(global.VictoryAxis, null), dependent:_react.default.createElement(global.VictoryAxis, {dependentAxis:!0})}, defaultPolarAxes:{independent:_react.default.createElement(module.VictoryPolarAxis, null), dependent:_react.default.createElement(module.VictoryPolarAxis, 
  {dependentAxis:!0})}, groupComponent:_react.default.createElement("g", null), standalone:!0, theme:_victoryCore.VictoryTheme.grayscale};
  exports = exports.VictoryChart = _react.default.memo(initialProps => {
    const propsWithDefaults = _react.default.useMemo(() => ({...defaultProps, ...initialProps}), [initialProps]), {getAnimationProps, setAnimationState, getProps} = _victoryCore.Hooks.useAnimationState(), props = getProps(propsWithDefaults), modifiedProps = _victoryCore.Helpers.modifyProps(props, fallbackProps, "chart"), {desc, eventKey, containerComponent, standalone, groupComponent, externalEventMutations, width, height, theme, polar, name, title} = modifiedProps, axes = props.polar ? modifiedProps.defaultPolarAxes : 
    modifiedProps.defaultAxes, childComponents = _react.default.useMemo(() => (0,_helperMethods.getChildComponents)(modifiedProps, axes), [modifiedProps, axes]), calculatedProps = _react.default.useMemo(() => (0,_helperMethods.getCalculatedProps)(modifiedProps, childComponents), [modifiedProps, childComponents]), {domain, scale, style, origin, horizontal} = calculatedProps, newChildren = _react.default.useMemo(() => {
      const mappedChildren = (0,_helperMethods.getChildren)(props, childComponents, calculatedProps).map((child, index) => {
        index = Object.assign({animate:getAnimationProps(props, child, index)}, child.props);
        return _react.default.cloneElement(child, index);
      });
      if (props.style && props.style.background) {
        const backgroundComponent = (0,_helperMethods.getBackgroundWithProps)(props, calculatedProps);
        mappedChildren.unshift(backgroundComponent);
      }
      return mappedChildren;
    }, [getAnimationProps, childComponents, props, calculatedProps]), containerProps = _react.default.useMemo(() => standalone ? {desc, domain, width, height, horizontal, name, origin:polar ? origin : void 0, polar, theme, title, scale, standalone, style:style.parent} : {}, [desc, domain, height, horizontal, name, origin, polar, scale, standalone, style, title, theme, width]), container = _react.default.useMemo(() => {
      if (standalone) {
        const defaultContainerProps = (0,_defaults2.default)({}, containerComponent.props, containerProps, _victoryCore.UserProps.getSafeUserProps(propsWithDefaults));
        return _react.default.cloneElement(containerComponent, defaultContainerProps);
      }
      return groupComponent;
    }, [groupComponent, standalone, containerComponent, containerProps, propsWithDefaults]), events = _react.default.useMemo(() => _victoryCore.Wrapper.getAllEvents(props), [props]), previousProps = _victoryCore.Hooks.usePreviousProps(propsWithDefaults);
    _react.default.useEffect(() => () => {
      propsWithDefaults.animate && setAnimationState(previousProps, propsWithDefaults);
    }, [setAnimationState, previousProps, propsWithDefaults]);
    return (0,_isEmpty2.default)(events) ? _react.default.cloneElement(container, container.props, newChildren) : _react.default.createElement(_victorySharedEvents.VictorySharedEvents, {container, eventKey, events, externalEventMutations}, newChildren);
  }, require.default);
  exports.displayName = "VictoryChart";
  exports.expectedComponents = ["groupComponent", "containerComponent"];
};

//# sourceMappingURL=module$node_modules$victory_chart$lib$victory_chart.js.map
