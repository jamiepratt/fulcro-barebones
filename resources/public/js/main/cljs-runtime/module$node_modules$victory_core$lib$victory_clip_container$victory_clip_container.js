shadow$provide.module$node_modules$victory_core$lib$victory_clip_container$victory_clip_container = function(global, require, module, exports) {
  function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) {
      return null;
    }
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
      return e ? t : r;
    })(e);
  }
  function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) {
      return e;
    }
    if (null === e || "object" != typeof e && "function" != typeof e) {
      return {default:e};
    }
    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {
      return r.get(e);
    }
    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;
    for (u in e) {
      if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
    }
    return n.default = e, r && r.set(e, n), n;
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.VictoryClipContainer = void 0;
  var _uniqueId2 = _interopRequireDefault(require("module$node_modules$lodash$uniqueId")), _isObject2 = _interopRequireDefault(require("module$node_modules$lodash$isObject")), _defaults2 = _interopRequireDefault(require("module$node_modules$lodash$defaults")), _react = _interopRequireDefault(require("module$node_modules$react$index")), Helpers = _interopRequireWildcard(require("module$node_modules$victory_core$lib$victory_util$helpers")), UserProps = _interopRequireWildcard(require("module$node_modules$victory_core$lib$victory_util$user_props")), 
  _clipPath = require("module$node_modules$victory_core$lib$victory_primitives$clip_path"), _circle = require("module$node_modules$victory_core$lib$victory_primitives$circle"), _rect = require("module$node_modules$victory_core$lib$victory_primitives$rect");
  class VictoryClipContainer extends _react.default.Component {
    static $jscomp$static$init$m1109712958$0$displayName() {
      return "VictoryClipContainer";
    }
    static $jscomp$static$init$m1109712958$1$role() {
      return "container";
    }
    static $jscomp$static$init$m1109712958$2$defaultProps() {
      return {circleComponent:_react.default.createElement(_circle.Circle, null), rectComponent:_react.default.createElement(_rect.Rect, null), clipPathComponent:_react.default.createElement(_clipPath.ClipPath, null), groupComponent:_react.default.createElement("g", null)};
    }
    constructor(props) {
      super(props);
      this.clipId = (0,_isObject2.default)(props) && void 0 !== props.clipId ? props.clipId : (0,_uniqueId2.default)("victory-clip-");
    }
    calculateAttributes(props) {
      const {polar, origin, clipWidth = 0, clipHeight = 0, translateX = 0, translateY = 0} = props, clipPadding = Helpers.getPadding({padding:props.clipPadding});
      props = props.radius || Helpers.getRadius(props);
      return {x:(polar ? origin.x : translateX) - clipPadding.left, y:(polar ? origin.y : translateY) - clipPadding.top, width:Math.max((polar ? props : clipWidth) + clipPadding.left + clipPadding.right, 0), height:Math.max((polar ? props : clipHeight) + clipPadding.top + clipPadding.bottom, 0)};
    }
    renderClippedGroup(props, clipId) {
      const userProps = UserProps.getSafeUserProps(props), {style, events, transform, children, className, groupComponent, tabIndex} = props;
      props = this.renderClipComponent(props, clipId);
      clipId = Object.assign({className, style, transform, key:`clipped-group-${clipId}`, clipPath:`url(#${clipId})`}, events);
      return _react.default.cloneElement(groupComponent, {...clipId, tabIndex, ...userProps}, [props, ..._react.default.Children.toArray(children)]);
    }
    renderGroup(props) {
      const {style, events, transform, children, className, groupComponent, tabIndex} = props;
      return _react.default.cloneElement(groupComponent, Object.assign({className, style, transform, "aria-label":props["aria-label"], tabIndex}, events), children);
    }
    renderClipComponent(props, clipId) {
      const {polar, origin, clipWidth = 0, clipHeight = 0, translateX = 0, translateY = 0, circleComponent, rectComponent, clipPathComponent} = props, {top, bottom, left, right} = Helpers.getPadding({padding:props.clipPadding});
      if (polar) {
        var child = props.radius || Helpers.getRadius(props);
        child = _react.default.cloneElement(circleComponent, {r:Math.max(child + left + right, child + top + bottom, 0), cx:origin.x - left, cy:origin.y - top});
      } else {
        child = _react.default.cloneElement(rectComponent, {x:translateX - left, y:translateY - top, width:Math.max(clipWidth + left + right, 0), height:Math.max(clipHeight + top + bottom, 0)});
      }
      return _react.default.cloneElement(clipPathComponent, Object.assign({key:`clip-path-${clipId}`}, props, {clipId}), child);
    }
    getClipValue(props, axis) {
      const clipValues = {x:props.clipWidth, y:props.clipHeight};
      return void 0 !== clipValues[axis] ? clipValues[axis] : (props = Helpers.getRange(props, axis)) ? Math.abs(props[0] - props[1]) || void 0 : void 0;
    }
    getTranslateValue(props, axis) {
      const translateValues = {x:props.translateX, y:props.translateY};
      return void 0 !== translateValues[axis] ? translateValues[axis] : (props = Helpers.getRange(props, axis)) ? Math.min(...props) : void 0;
    }
    render() {
      var clipHeight = this.getClipValue(this.props, "y");
      const clipWidth = this.getClipValue(this.props, "x");
      if (void 0 === clipWidth || void 0 === clipHeight) {
        return this.renderGroup(this.props);
      }
      const translateX = this.getTranslateValue(this.props, "x"), translateY = this.getTranslateValue(this.props, "y");
      clipHeight = (0,_defaults2.default)({}, this.props, {clipHeight, clipWidth, translateX, translateY});
      return this.renderClippedGroup(clipHeight, this.clipId);
    }
  }
  VictoryClipContainer.displayName = VictoryClipContainer.$jscomp$static$init$m1109712958$0$displayName();
  VictoryClipContainer.role = VictoryClipContainer.$jscomp$static$init$m1109712958$1$role();
  VictoryClipContainer.defaultProps = VictoryClipContainer.$jscomp$static$init$m1109712958$2$defaultProps();
  exports.VictoryClipContainer = VictoryClipContainer;
};

//# sourceMappingURL=module$node_modules$victory_core$lib$victory_clip_container$victory_clip_container.js.map
