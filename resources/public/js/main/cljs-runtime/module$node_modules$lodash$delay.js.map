{
"version":3,
"file":"module$node_modules$lodash$delay.js",
"lineCount":10,
"mappings":"AAAAA,cAAA,CAAA,gCAAA,GAAqD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MACzFC,YAAYH,OAAA,CAAQ,uCAAR,CAD6E;AAEzFI,QAAAA,GAAWJ,OAAA,CAAQ,sCAAR,CAAXI;AADJ,MAEIC,WAAWL,OAAA,CAAQ,qCAAR,CAFf;AAuBIM,SAAAA,GAAQF,MAAA,CAAS,QAAQ,CAACG,IAAD,EAAOC,IAAP,EAAaC,IAAb,CAAmB;AAC9C,WAAON,SAAA,CAAUI,IAAV,EAAgBF,QAAA,CAASG,IAAT,CAAhB,IAAkC,CAAlC,EAAqCC,IAArC,CAAP;AAD8C,GAApC,CAARH;AAIJL,QAAOC,CAAAA,OAAP,GAAiBI,OAAjB;AA5B6F,CAA7F;;",
"sources":["node_modules/lodash/delay.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$delay\"] = function(global,require,module,exports) {\nvar baseDelay = require('./_baseDelay'),\n    baseRest = require('./_baseRest'),\n    toNumber = require('./toNumber');\n\n/**\n * Invokes `func` after `wait` milliseconds. Any additional arguments are\n * provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) {\n *   console.log(text);\n * }, 1000, 'later');\n * // => Logs 'later' after one second.\n */\nvar delay = baseRest(function(func, wait, args) {\n  return baseDelay(func, toNumber(wait) || 0, args);\n});\n\nmodule.exports = delay;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseDelay","baseRest","toNumber","delay","func","wait","args"]
}
