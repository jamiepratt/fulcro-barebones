shadow$provide.module$node_modules$victory_vendor$lib_vendor$d3_scale$src$symlog = function(global, require, module, exports) {
  function transformSymlog(c) {
    return function(x) {
      return Math.sign(x) * Math.log1p(Math.abs(x / c));
    };
  }
  function transformSymexp(c) {
    return function(x) {
      return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
    };
  }
  function symlogish(transform) {
    var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));
    scale.constant = function(_) {
      return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
    };
    return (0,_linear.linearish)(scale);
  }
  function symlog() {
    var scale = symlogish((0,_continuous.transformer)());
    scale.copy = function() {
      return (0,_continuous.copy)(scale, symlog()).constant(scale.constant());
    };
    return _init.initRange.apply(scale, arguments);
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = symlog;
  exports.symlogish = symlogish;
  var _linear = require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$linear"), _continuous = require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$continuous"), _init = require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$init");
};

//# sourceMappingURL=module$node_modules$victory_vendor$lib_vendor$d3_scale$src$symlog.js.map
