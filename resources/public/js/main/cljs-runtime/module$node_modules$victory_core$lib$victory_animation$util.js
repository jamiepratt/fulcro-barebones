shadow$provide.module$node_modules$victory_core$lib$victory_animation$util = function(global, require, module, exports) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.victoryInterpolator = exports.isInterpolatable = exports.interpolateString = exports.interpolateObject = exports.interpolateImmediate = exports.interpolateFunction = void 0;
  var _orderBy2 = _interopRequireDefault(require("module$node_modules$lodash$orderBy")), _isPlainObject2 = _interopRequireDefault(require("module$node_modules$lodash$isPlainObject")), _d3Interpolate = require("module$node_modules$victory_vendor$lib$d3_interpolate");
  const isInterpolatable = function(obj) {
    if (null !== obj) {
      switch(typeof obj) {
        case "number":
          return !isNaN(obj) && obj !== Number.POSITIVE_INFINITY && obj !== Number.NEGATIVE_INFINITY;
        case "string":
          return !0;
        case "object":
          return obj instanceof Date || Array.isArray(obj) || (0,_isPlainObject2.default)(obj);
        case "function":
          return !0;
      }
    }
    return !1;
  };
  exports.isInterpolatable = isInterpolatable;
  const interpolateImmediate = function(a, b, when) {
    void 0 === when && (when = 0);
    return function(t) {
      return t < when ? a : b;
    };
  };
  exports.interpolateImmediate = interpolateImmediate;
  const interpolateFunction = function(a, b) {
    return function(t) {
      return 1 <= t ? b : function() {
        const aval = "function" === typeof a ? a.apply(this, arguments) : a, bval = "function" === typeof b ? b.apply(this, arguments) : b;
        return (0,_d3Interpolate.interpolate)(aval, bval)(t);
      };
    };
  };
  exports.interpolateFunction = interpolateFunction;
  const interpolateObject = function(startValue, endValue) {
    const interpolateTypes = (x, y) => x !== y && isInterpolatable(x) && isInterpolatable(y) ? "function" === typeof x || "function" === typeof y ? interpolateFunction(x, y) : "object" === typeof x && (0,_isPlainObject2.default)(x) || "object" === typeof y && (0,_isPlainObject2.default)(y) ? interpolateObject(x, y) : (0,_d3Interpolate.interpolate)(x, y) : interpolateImmediate(x, y), keyData = val => Array.isArray(val) ? (0,_orderBy2.default)(val, "key") : val, i = {}, c = {};
    let k;
    if (null === startValue || "object" !== typeof startValue) {
      startValue = {};
    }
    if (null === endValue || "object" !== typeof endValue) {
      endValue = {};
    }
    for (k in endValue) {
      k in startValue ? i[k] = interpolateTypes(keyData(startValue[k]), keyData(endValue[k])) : c[k] = endValue[k];
    }
    return function(t) {
      for (k in i) {
        c[k] = i[k](t);
      }
      return c;
    };
  };
  exports.interpolateObject = interpolateObject;
  const interpolateString = function(a, b) {
    const format = val => "string" === typeof val ? val.replace(/,/g, "") : val;
    return (0,_d3Interpolate.interpolate)(format(a), format(b));
  };
  exports.interpolateString = interpolateString;
  exports.victoryInterpolator = function(a, b) {
    return a !== b && isInterpolatable(a) && isInterpolatable(b) ? "function" === typeof a || "function" === typeof b ? interpolateFunction(a, b) : (0,_isPlainObject2.default)(a) || (0,_isPlainObject2.default)(b) ? interpolateObject(a, b) : "string" === typeof a || "string" === typeof b ? interpolateString(a, b) : (0,_d3Interpolate.interpolate)(a, b) : interpolateImmediate(a, b);
  };
};

//# sourceMappingURL=module$node_modules$victory_core$lib$victory_animation$util.js.map
