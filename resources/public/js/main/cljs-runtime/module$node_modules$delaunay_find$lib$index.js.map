{
"version":3,
"file":"module$node_modules$delaunay_find$lib$index.js",
"lineCount":144,
"mappings":"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",
"sources":["node_modules/delaunay-find/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$delaunay_find$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _delaunator = _interopRequireDefault(require(\"delaunator/delaunator.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// From https://github.com/d3/d3-delaunay/blob/master/src/delaunay.js\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n} // A triangulation is collinear if all its triangles have a non-null area\n\n\nfunction collinear(d) {\n  var triangles = d.triangles,\n      coords = d.coords;\n\n  for (var i = 0; i < triangles.length; i += 3) {\n    var a = 2 * triangles[i];\n    var b = 2 * triangles[i + 1];\n    var c = 2 * triangles[i + 2];\n    var cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]); // eslint-disable-next-line no-magic-numbers\n\n    if (cross > 1e-10) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n} // eslint-disable-next-line max-params\n\n\nfunction flatArray(points, fx, fy, that) {\n  var n = points.length;\n  var array = new Float64Array(n * 2);\n\n  for (var i = 0; i < n; ++i) {\n    var p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n\n  return array;\n}\n\nvar Delaunay =\n/*#__PURE__*/\nfunction () {\n  function Delaunay(points) {\n    var delaunator = new _delaunator[\"default\"](points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = delaunator.coords;\n\n    this._init(delaunator);\n  } // eslint-disable-next-line max-statements, complexity\n\n\n  var _proto = Delaunay.prototype;\n\n  _proto._init = function _init(delaunator) {\n    var d = delaunator;\n    var points = this.points; // check for collinear\n    // eslint-disable-next-line no-magic-numbers\n\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({\n        length: points.length / 2\n      }, function (_, i) {\n        return i;\n      }).sort(function (i, j) {\n        return points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1];\n      }); // for exact neighbors\n\n      var e = this.collinear[0];\n      var f = this.collinear[this.collinear.length - 1];\n      var bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]];\n      var r = 1e-8 * // eslint-disable-line no-magic-numbers\n      Math.sqrt(Math.pow(bounds[3] - bounds[1], 2) + Math.pow(bounds[2] - bounds[0], 2));\n\n      for (var i = 0, n = points.length / 2; i < n; ++i) {\n        var p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n\n      delaunator = new _delaunator[\"default\"](points);\n    }\n\n    var halfedges = this.halfedges = delaunator.halfedges;\n    var hull = this.hull = delaunator.hull;\n    var triangles = this.triangles = delaunator.triangles;\n    var inedges = this.inedges.fill(-1);\n\n    var hullIndex = this._hullIndex.fill(-1); // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n\n\n    for (var _e = 0, _n = halfedges.length; _e < _n; ++_e) {\n      var _p = triangles[_e % 3 === 2 ? _e - 2 : _e + 1];\n      if (halfedges[_e] === -1 || inedges[_p] === -1) inedges[_p] = _e;\n    }\n\n    for (var _i = 0, _n2 = hull.length; _i < _n2; ++_i) {\n      hullIndex[hull[_i]] = _i;\n    } // degenerate case: 1 or 2 (distinct) points\n\n\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  } // eslint-disable-next-line max-statements\n  ;\n\n  _proto.neighbors = function neighbors(i) {\n    var results = [];\n    var inedges = this.inedges,\n        hull = this.hull,\n        _hullIndex = this._hullIndex,\n        halfedges = this.halfedges,\n        triangles = this.triangles;\n    var e0 = inedges[i];\n    if (e0 === -1) return results; // coincident point\n\n    var e = e0;\n    var p0 = -1;\n\n    do {\n      p0 = triangles[e];\n      results.push(p0);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n\n      e = halfedges[e];\n\n      if (e === -1) {\n        var p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) results.push(p);\n        break;\n      }\n    } while (e !== e0);\n\n    return results;\n  };\n\n  _proto.find = function find(x, y, i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    // eslint-disable-next-line no-self-compare\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    var i0 = i;\n    var c;\n\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) {\n      i = c;\n    }\n\n    return c;\n  };\n\n  _proto._step = function _step(i, x, y) {\n    var inedges = this.inedges,\n        points = this.points;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    var c = i;\n    var dc = Math.pow(x - points[i * 2], 2) + Math.pow(y - points[i * 2 + 1], 2);\n\n    for (var _iterator = this.neighbors(i), _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i2 >= _iterator.length) break;\n        _ref = _iterator[_i2++];\n      } else {\n        _i2 = _iterator.next();\n        if (_i2.done) break;\n        _ref = _i2.value;\n      }\n\n      var t = _ref;\n      var dt = Math.pow(x - points[t * 2], 2) + Math.pow(y - points[t * 2 + 1], 2);\n\n      if (dt < dc) {\n        dc = dt;\n        c = t;\n      }\n    }\n\n    return c;\n  };\n\n  return Delaunay;\n}(); // eslint-disable-next-line max-params\n\n\nexports[\"default\"] = Delaunay;\n\nDelaunay.from = function (points, fx, fy, that) {\n  if (fx === void 0) {\n    fx = pointX;\n  }\n\n  if (fy === void 0) {\n    fy = pointY;\n  }\n\n  return new Delaunay(flatArray(points, fx, fy, that));\n}; // only public methods will be .from and .find\n};"],
"names":["shadow$provide","global","require","module","exports","pointX","p","pointY","collinear","d","triangles","coords","i","length","a","b","c","jitter","x","y","r","Math","sin","cos","__esModule","_delaunator","_interopRequireDefault","obj","Delaunay","points","delaunator","inedges","Int32Array","_hullIndex","_init","_proto","prototype","_proto._init","hull","from","_","sort","j","e","f","bounds","sqrt","pow","n","halfedges","fill","hullIndex","_e","_n","_p","_i","_n2","neighbors","_proto.neighbors","results","e0","p0","push","find","_proto.find","i0","_step","_proto._step","dc","_iterator","_isArray","Array","isArray","_i2","Symbol","iterator","_ref","next","done","value","dt","t","Delaunay.from","fx","fy","that","array","Float64Array","call"]
}
