{
"version":3,
"file":"module$node_modules$lodash$_arraySome.js",
"lineCount":11,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,GAA0D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAuBlGD,QAAOC,CAAAA,OAAP,GAZAC,QAAkB,CAACC,KAAD,EAAQC,SAAR,CAAmB;AAInC,SAJmC,IAC/BC,QAAQ,CAAC,CADsB,EAE/BC,SAAkB,IAAT,IAAAH,KAAA,GAAgB,CAAhB,GAAoBA,KAAMG,CAAAA,MAEvC,EAAO,EAAED,KAAT,GAAiBC,MAAjB,CAAA;AACE,UAAIF,SAAA,CAAUD,KAAA,CAAME,KAAN,CAAV,EAAwBA,KAAxB,EAA+BF,KAA/B,CAAJ;AACE,eAAO,CAAA,CAAP;AADF;AADF;AAKA,WAAO,CAAA,CAAP;AATmC,GAYrC;AAvBkG,CAAlG;;",
"sources":["node_modules/lodash/_arraySome.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_arraySome\"] = function(global,require,module,exports) {\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n};"],
"names":["shadow$provide","global","require","module","exports","arraySome","array","predicate","index","length"]
}
