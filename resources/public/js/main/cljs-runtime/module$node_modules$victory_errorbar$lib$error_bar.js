shadow$provide.module$node_modules$victory_errorbar$lib$error_bar = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.ErrorBar = void 0;
  var _react = function(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }(require("module$node_modules$react$index")), _victoryCore = require("module$node_modules$victory_core$lib$index");
  const renderBorder = (props, error, type) => {
    const vertical = "right" === type || "left" === type;
    return _react.default.cloneElement(props.lineComponent, {...props.events, role:props.role, shapeRendering:props.shapeRendering, className:props.className, style:props.style, transform:props.transform, key:`${props.id}-border-${type}`, x1:vertical ? error[type] : props.x - props.borderWidth, x2:vertical ? error[type] : props.x + props.borderWidth, y1:vertical ? props.y - props.borderWidth : error[type], y2:vertical ? props.y + props.borderWidth : error[type], "data-type":`border-${type}`});
  }, renderCross = (props, error, type) => {
    const vertical = "top" === type || "bottom" === type;
    return _react.default.cloneElement(props.lineComponent, {...props.events, role:props.role, shapeRendering:props.shapeRendering, className:props.className, style:props.style, transform:props.transform, key:`${props.id}-cross-${type}`, x1:props.x, x2:vertical ? props.x : error[type], y1:props.y, y2:vertical ? error[type] : props.y, "data-type":`cross-${type}`});
  }, calculateError = props => {
    const {errorX, errorY} = props, settings = {right:{error:errorX, errorIndex:0}, left:{error:errorX, errorIndex:1}, top:{error:errorY, errorIndex:1}, bottom:{error:errorY, errorIndex:0}};
    return ["right", "left", "top", "bottom"].reduce((memo, dir) => {
      const {error, errorIndex} = settings[dir];
      memo[dir] = error ? error[errorIndex] : void 0;
      return memo;
    }, {});
  }, defaultProps = {groupComponent:_react.default.createElement("g", null), lineComponent:_react.default.createElement(_victoryCore.Line, null), role:"presentation", shapeRendering:"auto"};
  exports.ErrorBar = initialProps => {
    initialProps = {...defaultProps, ...initialProps};
    var ariaLabel = _victoryCore.Helpers.evaluateProp(initialProps.ariaLabel, initialProps);
    var JSCompiler_inline_result = _victoryCore.Helpers.evaluateProp(initialProps.id, initialProps);
    var style = _victoryCore.Helpers.evaluateStyle(Object.assign({stroke:"black"}, initialProps.style), initialProps);
    const tabIndex = _victoryCore.Helpers.evaluateProp(initialProps.tabIndex, initialProps);
    JSCompiler_inline_result = Object.assign({}, initialProps, {ariaLabel, id:JSCompiler_inline_result, style, tabIndex});
    ({groupComponent:initialProps} = JSCompiler_inline_result);
    ariaLabel = _victoryCore.UserProps.getSafeUserProps(JSCompiler_inline_result);
    const {tabIndex:tabIndex$jscomp$0, ariaLabel:ariaLabel$jscomp$0} = JSCompiler_inline_result;
    style = calculateError(JSCompiler_inline_result);
    JSCompiler_inline_result = [style.right ? renderBorder(JSCompiler_inline_result, style, "right") : null, style.left ? renderBorder(JSCompiler_inline_result, style, "left") : null, style.bottom ? renderBorder(JSCompiler_inline_result, style, "bottom") : null, style.top ? renderBorder(JSCompiler_inline_result, style, "top") : null, style.right ? renderCross(JSCompiler_inline_result, style, "right") : null, style.left ? renderCross(JSCompiler_inline_result, style, "left") : null, style.bottom ? 
    renderCross(JSCompiler_inline_result, style, "bottom") : null, style.top ? renderCross(JSCompiler_inline_result, style, "top") : null].filter(Boolean);
    return _react.default.cloneElement(initialProps, {tabIndex:tabIndex$jscomp$0, "aria-label":ariaLabel$jscomp$0, ...ariaLabel}, JSCompiler_inline_result);
  };
};

//# sourceMappingURL=module$node_modules$victory_errorbar$lib$error_bar.js.map
