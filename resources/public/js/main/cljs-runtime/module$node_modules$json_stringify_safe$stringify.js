shadow$provide.module$node_modules$json_stringify_safe$stringify = function(global, require, module, exports) {
  function serializer(replacer, cycleReplacer) {
    var stack = [], keys = [];
    null == cycleReplacer && (cycleReplacer = function(key, value) {
      return stack[0] === value ? "[Circular ~]" : "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
    });
    return function(key, value) {
      if (0 < stack.length) {
        var thisPos = stack.indexOf(this);
        ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
        ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
        ~stack.indexOf(value) && (value = cycleReplacer.call(this, key, value));
      } else {
        stack.push(value);
      }
      return null == replacer ? value : replacer.call(this, key, value);
    };
  }
  exports = module.exports = function(obj, replacer, spaces, cycleReplacer) {
    return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);
  };
  exports.getSerialize = serializer;
};

//# sourceMappingURL=module$node_modules$json_stringify_safe$stringify.js.map
