shadow$provide.module$node_modules$victory_vendor$lib_vendor$d3_array$src$group = function(global, require, module, exports) {
  function groups(values, ...keys) {
    return nest(values, Array.from, _identity.default, keys);
  }
  function flatten(groups, keys) {
    for (let i = 1, n = keys.length; i < n; ++i) {
      groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));
    }
    return groups;
  }
  function rollups(values, reduce, ...keys) {
    return nest(values, Array.from, reduce, keys);
  }
  function unique(values) {
    if (1 !== values.length) {
      throw Error("duplicate key");
    }
    return values[0];
  }
  function nest(values, map, reduce, keys) {
    return function regroup(values, i) {
      if (i >= keys.length) {
        return reduce(values);
      }
      const groups = new _index.InternMap(), keyof = keys[i++];
      let index = -1;
      for (const value of values) {
        const key = keyof(value, ++index, values), group = groups.get(key);
        group ? group.push(value) : groups.set(key, [value]);
      }
      for (const [key, values] of groups) {
        groups.set(key, regroup(values, i));
      }
      return map(groups);
    }(values, 0);
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = function(values, ...keys) {
    return nest(values, _identity.default, _identity.default, keys);
  };
  exports.flatGroup = function(values, ...keys) {
    return flatten(groups(values, ...keys), keys);
  };
  exports.flatRollup = function(values, reduce, ...keys) {
    return flatten(rollups(values, reduce, ...keys), keys);
  };
  exports.groups = groups;
  exports.index = function(values, ...keys) {
    return nest(values, _identity.default, unique, keys);
  };
  exports.indexes = function(values, ...keys) {
    return nest(values, Array.from, unique, keys);
  };
  exports.rollup = function(values, reduce, ...keys) {
    return nest(values, _identity.default, reduce, keys);
  };
  exports.rollups = rollups;
  var _index = require("module$node_modules$victory_vendor$lib_vendor$internmap$src$index"), _identity = function(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }(require("module$node_modules$victory_vendor$lib_vendor$d3_array$src$identity"));
};

//# sourceMappingURL=module$node_modules$victory_vendor$lib_vendor$d3_array$src$group.js.map
