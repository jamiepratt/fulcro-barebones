{
"version":3,
"file":"module$node_modules$lodash$_baseIsMatch.js",
"lineCount":34,
"mappings":"AAAAA,cAAA,CAAA,uCAAA,GAA4D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAChGC,QAAQH,OAAA,CAAQ,mCAAR,CADwF,EAEhGI,cAAcJ,OAAA,CAAQ,yCAAR,CAFkF;AA8DpGC,QAAOC,CAAAA,OAAP,GA5CAG,QAAoB,CAACC,MAAD,EAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,CAAwC;AAAA,QACtDC,QAAQF,SAAUG,CAAAA,MADoC,EAEtDA,SAASD,KAF6C,EAGtDE,eAAe,CAACH,UAHsC;AAK1D,QAAc,IAAd,IAAIH,MAAJ;AACE,aAAO,CAACK,MAAR;AADF;AAIA,SADAL,MACA,GADSO,MAAA,CAAOP,MAAP,CACT,EAAOI,KAAA,EAAP,CAAA,CAAgB;AACd,UAAII,OAAON,SAAA,CAAUE,KAAV,CAAX;AACA,UAAKE,YAAD,IAAiBE,IAAA,CAAK,CAAL,CAAjB,GACIA,IAAA,CAAK,CAAL,CADJ,KACgBR,MAAA,CAAOQ,IAAA,CAAK,CAAL,CAAP,CADhB,GAEI,EAAEA,IAAA,CAAK,CAAL,CAAF,IAAaR,MAAb,CAFR;AAIE,eAAO,CAAA,CAAP;AAJF;AAFc;AAShB,SAAA,EAAO,EAAEI,KAAT,GAAiBC,MAAjB,CAAA,CAAyB;AACvBG,UAAA,GAAON,SAAA,CAAUE,KAAV,CAAP;AADuB,UAEnBK,MAAMD,IAAA,CAAK,CAAL,CAFa,EAGnBE,WAAWV,MAAA,CAAOS,GAAP,CAHQ,EAInBE,WAAWH,IAAA,CAAK,CAAL,CAJQ;AAMvB,UAAIF,YAAJ,IAAoBE,IAAA,CAAK,CAAL,CAApB;AACE,YAAiBI,IAAAA,EAAjB,KAAIF,QAAJ,IAA8B,EAAED,GAAF,IAAST,MAAT,CAA9B;AACE,iBAAO,CAAA,CAAP;AADF;AADF,YAIO;AACDa,YAAAA,GAAQ,IAAIhB,KAAJ,EAARgB;AACJ,YAAIV,UAAJ;AACE,cAAIW,SAASX,UAAA,CAAWO,QAAX,EAAqBC,QAArB,EAA+BF,GAA/B,EAAoCT,MAApC,EAA4CC,MAA5C,EAAoDY,IAApD,CAAb;AADF;AAGA,YAAiBD,IAAAA,EAAX,KAAAE,MAAA,GACE,CAAAhB,WAAA,CAAYa,QAAZ,EAAsBD,QAAtB,EAAgC,CAAhC,EAA+EP,UAA/E,EAA2FU,IAA3F,CADF,GAEEC,CAAAA,MAFR;AAIE,iBAAO,CAAA,CAAP;AAJF;AALK;AAVgB;AAuBzB,WAAO,CAAA,CAAP;AAzC0D,GA4C5D;AA9DoG,CAApG;;",
"sources":["node_modules/lodash/_baseIsMatch.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseIsMatch\"] = function(global,require,module,exports) {\nvar Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Stack","baseIsEqual","baseIsMatch","object","source","matchData","customizer","index","length","noCustomizer","Object","data","key","objValue","srcValue","undefined","stack","result"]
}
