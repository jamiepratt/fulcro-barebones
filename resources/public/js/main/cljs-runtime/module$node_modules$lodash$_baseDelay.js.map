{
"version":3,
"file":"module$node_modules$lodash$_baseDelay.js",
"lineCount":11,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,GAA0D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAqBlGD,QAAOC,CAAAA,OAAP,GAPAC,QAAkB,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,CAAmB;AACnC,QAAmB,UAAnB,IAAI,MAAOF,KAAX;AACE,YAAM,IAAIG,SAAJ,CAdYC,qBAcZ,CAAN;AADF;AAGA,WAAOC,UAAA,CAAW,QAAQ,EAAG;AAAEL,UAAKM,CAAAA,KAAL,CAAWC,IAAAA,EAAX,EAAsBL,IAAtB,CAAA;AAAF,KAAtB,EAAwDD,IAAxD,CAAP;AAJmC,GAOrC;AArBkG,CAAlG;;",
"sources":["node_modules/lodash/_baseDelay.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseDelay\"] = function(global,require,module,exports) {\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * The base implementation of `_.delay` and `_.defer` which accepts `args`\n * to provide to `func`.\n *\n * @private\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {Array} args The arguments to provide to `func`.\n * @returns {number|Object} Returns the timer id or timeout object.\n */\nfunction baseDelay(func, wait, args) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\n}\n\nmodule.exports = baseDelay;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseDelay","func","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","undefined"]
}
