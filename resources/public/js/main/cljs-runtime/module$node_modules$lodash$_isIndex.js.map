{
"version":3,
"file":"module$node_modules$lodash$_isIndex.js",
"lineCount":9,
"mappings":"AAAAA,cAAA,CAAA,mCAAA,GAAwD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAKhG,MAAIC,WAAW,kBAAf;AAoBAF,QAAOC,CAAAA,OAAP,GAVAE,QAAgB,CAACC,KAAD,EAAQC,MAAR,CAAgB;AAC9B,QAAIC,OAAO,MAAOF,MAAlB;AACAC,UAAA,GAAmB,IAAV,IAAAA,MAAA,GAfYE,gBAeZ,GAAoCF,MAA7C;AAEA,WAAO,CAAC,CAACA,MAAT,KACW,QADX,IACGC,IADH,IAEa,QAFb,IAEKA,IAFL,IAEyBJ,QAASM,CAAAA,IAAT,CAAcJ,KAAd,CAFzB,KAGe,CAAC,CAHhB,GAGOA,KAHP,IAGkC,CAHlC,IAGqBA,KAHrB,GAG6B,CAH7B,IAGuCA,KAHvC,GAG+CC,MAH/C;AAJ8B,GAUhC;AAzBgG,CAAhG;;",
"sources":["node_modules/lodash/_isIndex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_isIndex\"] = function(global,require,module,exports) {\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n};"],
"names":["shadow$provide","global","require","module","exports","reIsUint","isIndex","value","length","type","MAX_SAFE_INTEGER","test"]
}
