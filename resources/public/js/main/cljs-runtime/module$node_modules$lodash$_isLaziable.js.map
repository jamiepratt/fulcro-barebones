{
"version":3,
"file":"module$node_modules$lodash$_isLaziable.js",
"lineCount":15,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,GAA2D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAC/FC,cAAcH,OAAA,CAAQ,yCAAR,CADiF,EAE/FI,UAAUJ,OAAA,CAAQ,qCAAR,CAFqF,EAG/FK,cAAcL,OAAA,CAAQ,yCAAR,CAHiF,EAI/FM,SAASN,OAAA,CAAQ,0CAAR,CAJsF;AA4BnGC,QAAOC,CAAAA,OAAP,GAdAK,QAAmB,CAACC,IAAD,CAAO;AAAA,QACpBC,WAAWJ,WAAA,CAAYG,IAAZ,CADS,EAEpBE,QAAQJ,MAAA,CAAOG,QAAP,CAFY;AAIxB,QAAoB,UAApB,IAAI,MAAOC,MAAX,IAAkC,EAAED,QAAF,IAAcN,WAAYQ,CAAAA,SAA1B,CAAlC;AACE,aAAO,CAAA,CAAP;AADF;AAGA,QAAIH,IAAJ,KAAaE,KAAb;AACE,aAAO,CAAA,CAAP;AADF;AAGIE,YAAAA,GAAOR,OAAA,CAAQM,KAAR,CAAPE;AACJ,WAAO,CAAC,CAACA,QAAT,IAAiBJ,IAAjB,KAA0BI,QAAA,CAAK,CAAL,CAA1B;AAXwB,GAc1B;AA5BmG,CAAnG;;",
"sources":["node_modules/lodash/_isLaziable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_isLaziable\"] = function(global,require,module,exports) {\nvar LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n\n};"],
"names":["shadow$provide","global","require","module","exports","LazyWrapper","getData","getFuncName","lodash","isLaziable","func","funcName","other","prototype","data"]
}
