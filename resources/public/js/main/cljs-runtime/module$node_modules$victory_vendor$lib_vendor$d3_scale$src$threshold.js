shadow$provide.module$node_modules$victory_vendor$lib_vendor$d3_scale$src$threshold = function(global, require, module, exports) {
  function threshold() {
    function scale(x) {
      return null != x && x <= x ? range[(0,_index.bisect)(domain, x, 0, n)] : unknown;
    }
    var domain = [0.5], range = [0, 1], unknown, n = 1;
    scale.domain = function(_) {
      return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
    };
    scale.range = function(_) {
      return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return [domain[y - 1], domain[y]];
    };
    scale.unknown = function(_) {
      return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
      return threshold().domain(domain).range(range).unknown(unknown);
    };
    return _init.initRange.apply(scale, arguments);
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = threshold;
  var _index = require("module$node_modules$victory_vendor$lib_vendor$d3_array$src$index"), _init = require("module$node_modules$victory_vendor$lib_vendor$d3_scale$src$init");
};

//# sourceMappingURL=module$node_modules$victory_vendor$lib_vendor$d3_scale$src$threshold.js.map
