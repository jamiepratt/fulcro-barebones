shadow$provide.module$node_modules$victory_tooltip$lib$flyout = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.Flyout = void 0;
  var _react = function(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }(require("module$node_modules$react$index")), _victoryCore = require("module$node_modules$victory_core$lib$index");
  const defaultProps = {pathComponent:_react.default.createElement(_victoryCore.Path, null), role:"presentation", shapeRendering:"auto"};
  exports.Flyout = initialProps => {
    initialProps = {...defaultProps, ...initialProps};
    var id = _victoryCore.Helpers.evaluateProp(initialProps.id, initialProps), style = _victoryCore.Helpers.evaluateStyle(initialProps.style, initialProps);
    initialProps = {...initialProps, id, style};
    id = _victoryCore.UserProps.getSafeUserProps(initialProps);
    _victoryCore.UserProps.assert(initialProps.height, "Flyout props[height] is undefined");
    _victoryCore.UserProps.assert(initialProps.width, "Flyout props[width] is undefined");
    _victoryCore.UserProps.assert(initialProps.x, "Flyout props[x] is undefined");
    _victoryCore.UserProps.assert(initialProps.y, "Flyout props[y] is undefined");
    var flyoutPathProps = {center:initialProps.center || {x:0, y:0}, cornerRadius:initialProps.cornerRadius || 0, dx:initialProps.dx, dy:initialProps.dy, height:initialProps.height, orientation:initialProps.orientation || "top", pointerLength:initialProps.pointerLength || 0, pointerWidth:initialProps.pointerWidth || 0, width:initialProps.width, x:initialProps.x, y:initialProps.y};
    style = _react.default;
    var JSCompiler_temp_const = style.cloneElement, JSCompiler_temp_const$jscomp$0 = initialProps.pathComponent, JSCompiler_temp_const$jscomp$1 = {...initialProps.events}, JSCompiler_temp_const$jscomp$2 = initialProps.style, orientation$jscomp$0 = flyoutPathProps.orientation || "top";
    if ("left" === orientation$jscomp$0 || "right" === orientation$jscomp$0) {
      const {pointerWidth, cornerRadius, orientation, width, height, center} = flyoutPathProps;
      orientation$jscomp$0 = "left" === orientation ? 1 : -1;
      var x = flyoutPathProps.x + (flyoutPathProps.dx || 0), y = flyoutPathProps.y + (flyoutPathProps.dy || 0), centerX = center.x, centerY = center.y, pointerEdge = centerX - width / 2 * orientation$jscomp$0;
      centerX += width / 2 * orientation$jscomp$0;
      var bottomEdge = centerY + height / 2, topEdge = centerY - height / 2;
      flyoutPathProps = 0 < orientation$jscomp$0 * (x - pointerEdge) ? 0 : flyoutPathProps.pointerLength;
      var arc = `${cornerRadius} ${cornerRadius} ${"left" === orientation ? "0 0 0" : "0 0 1"}`;
      flyoutPathProps = `M ${pointerEdge}, ${centerY - pointerWidth / 2}
    L ${flyoutPathProps ? x : pointerEdge}, ${flyoutPathProps ? y : centerY + pointerWidth / 2}
    L ${pointerEdge}, ${centerY + pointerWidth / 2}
    L ${pointerEdge}, ${bottomEdge - cornerRadius}
    A ${arc} ${pointerEdge + orientation$jscomp$0 * cornerRadius}, ${bottomEdge}
    L ${centerX - orientation$jscomp$0 * cornerRadius}, ${bottomEdge}
    A ${arc} ${centerX}, ${bottomEdge - cornerRadius}
    L ${centerX}, ${topEdge + cornerRadius}
    A ${arc} ${centerX - orientation$jscomp$0 * cornerRadius}, ${topEdge}
    L ${pointerEdge + orientation$jscomp$0 * cornerRadius}, ${topEdge}
    A ${arc} ${pointerEdge}, ${topEdge + cornerRadius}
    z`;
    } else {
      const {pointerWidth, cornerRadius, orientation, width, height, center} = flyoutPathProps;
      orientation$jscomp$0 = "bottom" === orientation ? 1 : -1;
      x = flyoutPathProps.x + (flyoutPathProps.dx || 0);
      y = flyoutPathProps.y + (flyoutPathProps.dy || 0);
      centerY = center.x;
      centerX = center.y;
      pointerEdge = centerX + height / 2 * orientation$jscomp$0;
      centerX -= height / 2 * orientation$jscomp$0;
      bottomEdge = centerY + width / 2;
      topEdge = centerY - width / 2;
      flyoutPathProps = 0 > orientation$jscomp$0 * (y - pointerEdge) ? 0 : flyoutPathProps.pointerLength;
      arc = `${cornerRadius} ${cornerRadius} ${"bottom" === orientation ? "0 0 0" : "0 0 1"}`;
      flyoutPathProps = `M ${centerY - pointerWidth / 2}, ${pointerEdge}
    L ${flyoutPathProps ? x : centerY + pointerWidth / 2}, ${flyoutPathProps ? y : pointerEdge}
    L ${centerY + pointerWidth / 2}, ${pointerEdge}
    L ${bottomEdge - cornerRadius}, ${pointerEdge}
    A ${arc} ${bottomEdge}, ${pointerEdge - orientation$jscomp$0 * cornerRadius}
    L ${bottomEdge}, ${centerX + orientation$jscomp$0 * cornerRadius}
    A ${arc} ${bottomEdge - cornerRadius}, ${centerX}
    L ${topEdge + cornerRadius}, ${centerX}
    A ${arc} ${topEdge}, ${centerX + orientation$jscomp$0 * cornerRadius}
    L ${topEdge}, ${pointerEdge - orientation$jscomp$0 * cornerRadius}
    A ${arc} ${topEdge + cornerRadius}, ${pointerEdge}
    z`;
    }
    return JSCompiler_temp_const.call(style, JSCompiler_temp_const$jscomp$0, {...JSCompiler_temp_const$jscomp$1, ...id, style:JSCompiler_temp_const$jscomp$2, d:flyoutPathProps, className:initialProps.className, shapeRendering:initialProps.shapeRendering, role:initialProps.role, transform:initialProps.transform, clipPath:initialProps.clipPath});
  };
};

//# sourceMappingURL=module$node_modules$victory_tooltip$lib$flyout.js.map
