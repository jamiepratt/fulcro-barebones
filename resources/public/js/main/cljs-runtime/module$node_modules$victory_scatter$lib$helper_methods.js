shadow$provide.module$node_modules$victory_scatter$lib$helper_methods = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.getSymbol = exports.getSize = exports.getBubbleSize = exports.getBaseProps = void 0;
  var _victoryCore = require("module$node_modules$victory_core$lib$index");
  const getSymbol = (data, props) => props.bubbleProperty ? "circle" : data.symbol || props.symbol;
  exports.getSymbol = getSymbol;
  const getBubbleSize = (datum, props) => {
    const {data, z, maxBubbleSize, minBubbleSize} = props;
    var zData = data.map(point => point[z]);
    const zMin = Math.min(...zData);
    zData = Math.max(...zData);
    var getMaxRadius = () => {
      const minPadding = Math.min(...Object.values(_victoryCore.Helpers.getPadding(props)));
      return Math.max(minPadding, 5);
    };
    getMaxRadius = maxBubbleSize || getMaxRadius();
    const minRadius = minBubbleSize || 0.1 * getMaxRadius;
    return zData === zMin ? Math.max(minRadius, 1) : Math.max(Math.sqrt(Math.max((datum[z] - zMin) / (zData - zMin) * Math.PI * Math.pow(getMaxRadius, 2), Math.PI * Math.pow(minRadius, 2)) / Math.PI), 1);
  };
  exports.getBubbleSize = getBubbleSize;
  const getSize = (datum, props) => {
    const {size, z} = props;
    return datum.size ? "function" === typeof datum.size ? datum.size : Math.max(datum.size, 1) : "function" === typeof props.size ? size : datum[z] ? getBubbleSize(datum, props) : Math.max(size || 0, 1);
  };
  exports.getSize = getSize;
  const getCalculatedValues = props => {
    var defaultStyles = _victoryCore.Helpers.getDefaultStyles(props, "scatter");
    defaultStyles = _victoryCore.Helpers.getStyles(props.style, defaultStyles);
    var JSCompiler_object_inline_x_1148 = _victoryCore.Helpers.getRange(props, "x"), JSCompiler_object_inline_y_1149 = _victoryCore.Helpers.getRange(props, "y");
    const domain = {x:_victoryCore.Domain.getDomain(props, "x"), y:_victoryCore.Domain.getDomain(props, "y")};
    JSCompiler_object_inline_x_1148 = {x:_victoryCore.Scale.getBaseScale(props, "x").domain(domain.x).range(props.horizontal ? JSCompiler_object_inline_y_1149 : JSCompiler_object_inline_x_1148), y:_victoryCore.Scale.getBaseScale(props, "y").domain(domain.y).range(props.horizontal ? JSCompiler_object_inline_x_1148 : JSCompiler_object_inline_y_1149)};
    JSCompiler_object_inline_y_1149 = props.polar ? props.origin || _victoryCore.Helpers.getPolarOrigin(props) : void 0;
    const z = props.bubbleProperty || "z";
    props = _victoryCore.Data.getData(props);
    props = _victoryCore.Data.formatDataFromDomain(props, domain);
    return {domain, data:props, scale:JSCompiler_object_inline_x_1148, style:defaultStyles, origin:JSCompiler_object_inline_y_1149, z};
  };
  exports.getBaseProps = (initialProps, fallbackProps) => {
    initialProps = _victoryCore.Helpers.modifyProps(initialProps, fallbackProps, "scatter");
    const props = Object.assign({}, initialProps, getCalculatedValues(initialProps)), {data, domain, events, height, origin, padding, polar, scale, name, sharedEvents, standalone, style, theme, width, labels, horizontal, disableInlineStyles} = props;
    return data.reduce((childProps, datum, index) => {
      const eventKey = _victoryCore.Helpers.isNil(datum.eventKey) ? index : datum.eventKey, {x, y} = _victoryCore.Helpers.scalePoint(props, datum), dataProps = {x, y, datum, data, index, scale, polar, origin, horizontal, size:getSize(datum, props), symbol:getSymbol(datum, props), style:disableInlineStyles ? {} : style.data, disableInlineStyles};
      childProps[eventKey] = {data:dataProps};
      datum = _victoryCore.LabelHelpers.getText(props, datum, index);
      if (void 0 !== datum && null !== datum || labels && (events || sharedEvents)) {
        childProps[eventKey].labels = _victoryCore.LabelHelpers.getProps(props, index);
      }
      return childProps;
    }, {parent:{style:style.parent, scale, domain, data, height, width, standalone, theme, origin, polar, padding, name, horizontal}});
  };
};

//# sourceMappingURL=module$node_modules$victory_scatter$lib$helper_methods.js.map
