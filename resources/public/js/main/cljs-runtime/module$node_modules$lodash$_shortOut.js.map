{
"version":3,
"file":"module$node_modules$lodash$_shortOut.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,GAAyD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAMjG,MAAIC,YAAYC,IAAKC,CAAAA,GAArB;AA+BAJ,QAAOC,CAAAA,OAAP,GApBAI,QAAiB,CAACC,IAAD,CAAO;AAAA,QAClBC,QAAQ,CADU,EAElBC,aAAa,CAFK;AAItB,WAAO,QAAQ,EAAG;AAAA,UACZC,QAAQP,SAAA,EADI,EAEZQ,YApBOC,EAoBPD,IAAwBD,KAAxBC,GAAgCF,UAAhCE,CAFY;AAIhBF,gBAAA,GAAaC,KAAb;AACA,UAAgB,CAAhB,GAAIC,SAAJ;AACE,YAzBUE,GAyBV,IAAI,EAAEL,KAAN;AACE,iBAAOM,SAAA,CAAU,CAAV,CAAP;AADF;AADF;AAKEN,aAAA,GAAQ,CAAR;AALF;AAOA,aAAOD,IAAKQ,CAAAA,KAAL,CAAWC,IAAAA,EAAX,EAAsBF,SAAtB,CAAP;AAZgB,KAAlB;AAJsB,GAoBxB;AArCiG,CAAjG;;",
"sources":["node_modules/lodash/_shortOut.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_shortOut\"] = function(global,require,module,exports) {\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n\n};"],
"names":["shadow$provide","global","require","module","exports","nativeNow","Date","now","shortOut","func","count","lastCalled","stamp","remaining","HOT_SPAN","HOT_COUNT","arguments","apply","undefined"]
}
