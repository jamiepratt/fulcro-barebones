{
"version":3,
"file":"module$node_modules$lodash$_baseMatchesProperty.js",
"lineCount":10,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,GAAoE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MACxGC,cAAcH,OAAA,CAAQ,yCAAR,CAD0F,EAExGI,MAAMJ,OAAA,CAAQ,gCAAR,CAFkG,EAGxGK,QAAQL,OAAA,CAAQ,kCAAR,CAHgG,EAIxGM,QAAQN,OAAA,CAAQ,mCAAR,CAJgG,EAKxGO,qBAAqBP,OAAA,CAAQ,gDAAR,CALmF,EAMxGQ,0BAA0BR,OAAA,CAAQ,qDAAR,CAN8E,EAOxGS,QAAQT,OAAA,CAAQ,mCAAR,CAPgG;AAiC5GC,QAAOC,CAAAA,OAAP,GAZAQ,QAA4B,CAACC,IAAD,EAAOC,QAAP,CAAiB;AAC3C,WAAIN,KAAA,CAAMK,IAAN,CAAJ,IAAmBJ,kBAAA,CAAmBK,QAAnB,CAAnB,GACSJ,uBAAA,CAAwBC,KAAA,CAAME,IAAN,CAAxB,EAAqCC,QAArC,CADT,GAGO,QAAQ,CAACC,MAAD,CAAS;AACtB,UAAIC,WAAWV,GAAA,CAAIS,MAAJ,EAAYF,IAAZ,CAAf;AACA,aAAqBI,IAAAA,EAAd,KAACD,QAAD,IAA2BA,QAA3B,KAAwCF,QAAxC,GACHP,KAAA,CAAMQ,MAAN,EAAcF,IAAd,CADG,GAEHR,WAAA,CAAYS,QAAZ,EAAsBE,QAAtB,EAAgC,CAAhC,CAFJ;AAFsB,KAHxB;AAD2C,GAY7C;AAjC4G,CAA5G;;",
"sources":["node_modules/lodash/_baseMatchesProperty.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseMatchesProperty\"] = function(global,require,module,exports) {\nvar baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseIsEqual","get","hasIn","isKey","isStrictComparable","matchesStrictComparable","toKey","baseMatchesProperty","path","srcValue","object","objValue","undefined"]
}
