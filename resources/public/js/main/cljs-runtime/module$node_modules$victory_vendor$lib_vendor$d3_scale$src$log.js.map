{
"version":3,
"file":"module$node_modules$victory_vendor$lib_vendor$d3_scale$src$log.js",
"lineCount":112,
"mappings":"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",
"sources":["node_modules/victory-vendor/lib-vendor/d3-scale/src/log.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$victory_vendor$lib_vendor$d3_scale$src$log\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = log;\nexports.loggish = loggish;\nvar _index = require(\"../../../lib-vendor/d3-array/src/index.js\");\nvar _index2 = require(\"../../../lib-vendor/d3-format/src/index.js\");\nvar _nice = _interopRequireDefault(require(\"./nice.js\"));\nvar _continuous = require(\"./continuous.js\");\nvar _init = require(\"./init.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction transformLog(x) {\n  return Math.log(x);\n}\nfunction transformExp(x) {\n  return Math.exp(x);\n}\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\nfunction powp(base) {\n  return base === 10 ? pow10 : base === Math.E ? Math.exp : x => Math.pow(base, x);\n}\nfunction logp(base) {\n  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), x => Math.log(x) / base);\n}\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\nfunction loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n  scale.base = function (_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n    if (r) [u, v] = [v, u];\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = (0, _index.ticks)(u, v, n);\n    } else {\n      z = (0, _index.ticks)(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = (0, _index2.formatSpecifier)(specifier)).precision == null) specifier.trim = true;\n      specifier = (0, _index2.format)(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n  scale.nice = () => {\n    return domain((0, _nice.default)(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n  return scale;\n}\nfunction log() {\n  const scale = loggish((0, _continuous.transformer)()).domain([1, 10]);\n  scale.copy = () => (0, _continuous.copy)(scale, log()).base(scale.base());\n  _init.initRange.apply(scale, arguments);\n  return scale;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","transformLog","x","Math","log","transformExp","exp","transformLogn","transformExpn","pow10","isFinite","powp","base","E","pow","logp","log10","log2","reflect","f","k","loggish","transform","rescale","logs","pows","domain","scale","scale.base","_","arguments","length","scale.domain","ticks","count","scale.ticks","d","u","v","r","i","j","t","n","z","floor","ceil","push","_index","min","map","reverse","tickFormat","specifier","scale.tickFormat","precision","_index2","formatSpecifier","trim","format","Infinity","max","round","nice","scale.nice","_nice","default","_continuous","transformer","copy","scale.copy","_init","initRange","apply","Object","defineProperty","value","_interopRequireDefault","obj","__esModule"]
}
