{
"version":3,
"file":"module$node_modules$victory_vendor$lib_vendor$d3_array$src$variance.js",
"lineCount":20,
"mappings":"AAAAA,cAAA,CAAA,mEAAA,GAAwF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGhIC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAH,SAAQI,CAAAA,OAAR,GACAC,QAAiB,CAACC,MAAD,EAASC,OAAT,CAAkB;AACjC,QAAIC,QAAQ,CAAZ,EACIC,KADJ,EAEIC,OAAO,CAFX,EAGIC,MAAM,CAHV;AAIA,QAAgBC,IAAAA,EAAhB,KAAIL,OAAJ;AACE,WAAK,IAAIJ,cAAT,IAAkBG,MAAlB;AACe,YAAb,IAAIH,cAAJ,KAAsBA,cAAtB,GAA8B,CAACA,cAA/B,KAAyCA,cAAzC,KACEM,KAEA,GAFQN,cAER,GAFgBO,IAEhB,EADAA,IACA,IADQD,KACR,GADgB,EAAED,KAClB,EAAAG,GAAA,IAAOF,KAAP,IAAgBN,cAAhB,GAAwBO,IAAxB,CAHF;AADF;AADF,UAQO;AACDG,oBAAAA,GAAQ,CAAC,CAATA;AACJ,WAAK,IAAIV,KAAT,IAAkBG,MAAlB;AACmD,YAAjD,KAAKH,KAAL,GAAaI,OAAA,CAAQJ,KAAR,EAAe,EAAEU,cAAjB,EAAwBP,MAAxB,CAAb,MAA0DH,KAA1D,GAAkE,CAACA,KAAnE,KAA6EA,KAA7E,KACEM,KAEA,GAFQN,KAER,GAFgBO,IAEhB,EADAA,IACA,IADQD,KACR,GADgB,EAAED,KAClB,EAAAG,GAAA,IAAOF,KAAP,IAAgBN,KAAhB,GAAwBO,IAAxB,CAHF;AADF;AAFK;AAUP,QAAY,CAAZ,GAAIF,KAAJ;AAAe,aAAOG,GAAP,IAAcH,KAAd,GAAsB,CAAtB;AAAf;AAvBiC,GADnC;AANgI,CAAhI;;",
"sources":["node_modules/victory-vendor/lib-vendor/d3-array/src/variance.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$victory_vendor$lib_vendor$d3_array$src$variance\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = variance;\nfunction variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","variance","values","valueof","count","delta","mean","sum","undefined","index"]
}
