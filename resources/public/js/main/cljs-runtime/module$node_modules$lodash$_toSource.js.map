{
"version":3,
"file":"module$node_modules$lodash$_toSource.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,GAAyD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAKjG,MAAIC,eAHYC,QAASC,CAAAA,SAGIC,CAAAA,QAA7B;AAqBAL,QAAOC,CAAAA,OAAP,GAZAK,QAAiB,CAACC,IAAD,CAAO;AACtB,QAAY,IAAZ,IAAIA,IAAJ,CAAkB;AAChB,SAAI;AACF,eAAOL,YAAaM,CAAAA,IAAb,CAAkBD,IAAlB,CAAP;AADE,OAEF,QAAOE,CAAP,CAAU;;AAEV,aAAQF,IAAR,GAAe,EAAf;AALc;AAQlB,WAAO,EAAP;AATsB,GAYxB;AA1BiG,CAAjG;;",
"sources":["node_modules/lodash/_toSource.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_toSource\"] = function(global,require,module,exports) {\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n};"],
"names":["shadow$provide","global","require","module","exports","funcToString","Function","prototype","toString","toSource","func","call","e"]
}
