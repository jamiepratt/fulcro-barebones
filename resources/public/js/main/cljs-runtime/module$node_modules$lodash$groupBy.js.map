{
"version":3,
"file":"module$node_modules$lodash$groupBy.js",
"lineCount":10,
"mappings":"AAAAA,cAAA,CAAA,kCAAA,GAAuD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAC3FC,kBAAkBH,OAAA,CAAQ,6CAAR,CADyE;AAE3FI,QAAAA,GAAmBJ,OAAA,CAAQ,8CAAR,CAAnBI;AAMJ,MAAIC,iBAHcC,MAAOC,CAAAA,SAGQF,CAAAA,cAAjC;AAyBIG,QAAAA,GAAUJ,MAAA,CAAiB,QAAQ,CAACK,MAAD,EAASC,KAAT,EAAgBC,GAAhB,CAAqB;AACtDN,kBAAeO,CAAAA,IAAf,CAAoBH,MAApB,EAA4BE,GAA5B,CAAJ,GACEF,MAAA,CAAOE,GAAP,CAAYE,CAAAA,IAAZ,CAAiBH,KAAjB,CADF,GAGEP,eAAA,CAAgBM,MAAhB,EAAwBE,GAAxB,EAA6B,CAACD,KAAD,CAA7B,CAHF;AAD0D,GAA9C,CAAVF;AAQJP,QAAOC,CAAAA,OAAP,GAAiBM,MAAjB;AAzC+F,CAA/F;;",
"sources":["node_modules/lodash/groupBy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$groupBy\"] = function(global,require,module,exports) {\nvar baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","result","value","key","call","push"]
}
