{
"version":3,
"file":"module$node_modules$lodash$isFunction.js",
"lineCount":11,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,GAA0D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAC9FC,aAAaH,OAAA,CAAQ,wCAAR,CADiF,EAE9FI,WAAWJ,OAAA,CAAQ,qCAAR,CAFmF;AAqClGC,QAAOC,CAAAA,OAAP,GAVAG,QAAmB,CAACC,KAAD,CAAQ;AACzB,QAAI,CAACF,QAAA,CAASE,KAAT,CAAL;AACE,aAAO,CAAA,CAAP;AADF;AAKIC,SAAAA,GAAMJ,UAAA,CAAWG,KAAX,CAANC;AACJ,WA5BYC,mBA4BZ,IAAOD,KAAP,IA3BWE,4BA2BX,IAAyBF,KAAzB,IA7BaG,wBA6Bb,IAA0CH,KAA1C,IA1BaI,gBA0Bb,IAA6DJ,KAA7D;AAPyB,GAU3B;AArCkG,CAAlG;;",
"sources":["node_modules/lodash/isFunction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$isFunction\"] = function(global,require,module,exports) {\nvar baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseGetTag","isObject","isFunction","value","tag","funcTag","genTag","asyncTag","proxyTag"]
}
