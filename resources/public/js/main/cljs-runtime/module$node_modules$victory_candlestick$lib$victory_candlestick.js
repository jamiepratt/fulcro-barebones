shadow$provide.module$node_modules$victory_candlestick$lib$victory_candlestick = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.VictoryCandlestick = void 0;
  var _react = function(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }(require("module$node_modules$react$index")), _victoryCore = require("module$node_modules$victory_core$lib$index"), _candle = require("module$node_modules$victory_candlestick$lib$candle"), _helperMethods = require("module$node_modules$victory_candlestick$lib$helper_methods");
  const fallbackProps = {width:450, height:300, padding:50, candleColors:{positive:"#ffffff", negative:"#252525"}}, defaultData = [{x:new Date(2016, 6, 1), open:5, close:10, high:15, low:0}, {x:new Date(2016, 6, 2), open:10, close:15, high:20, low:5}, {x:new Date(2016, 6, 3), open:15, close:20, high:25, low:10}, {x:new Date(2016, 6, 4), open:20, close:25, high:30, low:15}, {x:new Date(2016, 6, 5), open:25, close:30, high:35, low:20}, {x:new Date(2016, 6, 6), open:30, close:35, high:40, low:25}, {x:new Date(2016, 
  6, 7), open:35, close:40, high:45, low:30}, {x:new Date(2016, 6, 8), open:40, close:45, high:50, low:35}], datumHasXandY = datum => !_victoryCore.Helpers.isNil(datum._x) && !_victoryCore.Helpers.isNil(datum._y);
  class VictoryCandlestickBase extends _react.default.Component {
    constructor() {
      super(...arguments);
      this.shouldRenderDatum = datum => !_victoryCore.Helpers.isNil(datum._x) && !_victoryCore.Helpers.isNil(datum._high) && !_victoryCore.Helpers.isNil(datum._low) && !_victoryCore.Helpers.isNil(datum._close) && !_victoryCore.Helpers.isNil(datum._open);
    }
    static $jscomp$static$init$602654661$0$animationWhitelist() {
      return "data domain height padding samples size style width".split(" ");
    }
    static $jscomp$static$init$602654661$1$displayName() {
      return "VictoryCandlestick";
    }
    static $jscomp$static$init$602654661$2$role() {
      return "candlestick";
    }
    static $jscomp$static$init$602654661$3$defaultTransitions() {
      return _victoryCore.DefaultTransitions.discreteTransitions();
    }
    static $jscomp$static$init$602654661$4$defaultProps() {
      return {containerComponent:_react.default.createElement(_victoryCore.VictoryContainer, null), data:defaultData, dataComponent:_react.default.createElement(_candle.Candle, null), groupComponent:_react.default.createElement("g", {role:"presentation"}), labelComponent:_react.default.createElement(_victoryCore.VictoryLabel, null), highLabelComponent:_react.default.createElement(_victoryCore.VictoryLabel, null), lowLabelComponent:_react.default.createElement(_victoryCore.VictoryLabel, null), openLabelComponent:_react.default.createElement(_victoryCore.VictoryLabel, 
      null), closeLabelComponent:_react.default.createElement(_victoryCore.VictoryLabel, null), samples:50, sortOrder:"ascending", standalone:!0, theme:_victoryCore.VictoryTheme.grayscale};
    }
    static getDomain(props, axis) {
      return (0,_helperMethods.getDomain)(props, axis);
    }
    static getData(props) {
      return (0,_helperMethods.getData)(props);
    }
    static getBaseProps(props) {
      return (0,_helperMethods.getBaseProps)(props, fallbackProps);
    }
    static $jscomp$static$init$602654661$5$expectedComponents() {
      return "openLabelComponent closeLabelComponent highLabelComponent lowLabelComponent dataComponent labelComponent groupComponent containerComponent".split(" ");
    }
    shouldAnimate() {
      return !!this.props.animate;
    }
    renderCandleData(props, shouldRenderDatum) {
      void 0 === shouldRenderDatum && (shouldRenderDatum = datumHasXandY);
      const {dataComponent, labelComponent, groupComponent} = props;
      if (!groupComponent) {
        throw Error("VictoryCandlestick expects a groupComponent prop");
      }
      const children = [];
      if (dataComponent) {
        var dataComponents = this.dataKeys.reduce((validDataComponents, _dataKey, index) => {
          _dataKey = this.getComponentProps(dataComponent, "data", index);
          shouldRenderDatum(_dataKey.datum) && validDataComponents.push(_react.default.cloneElement(dataComponent, _dataKey));
          return validDataComponents;
        }, []);
        children.push(...dataComponents);
      }
      dataComponents = ["close", "open", "low", "high"].flatMap(type => this.dataKeys.map((key, index) => {
        key = props[`${type}LabelComponent`];
        index = this.getComponentProps(key, `${type}Labels`, index);
        if (void 0 !== index.text && null !== index.text) {
          return _react.default.cloneElement(key, index);
        }
      }).filter(comp => void 0 !== comp));
      children.push(...dataComponents);
      labelComponent && (dataComponents = this.dataKeys.map((_dataKey, index) => {
        _dataKey = this.getComponentProps(labelComponent, "labels", index);
        if (void 0 !== _dataKey.text && null !== _dataKey.text) {
          return _react.default.cloneElement(labelComponent, _dataKey);
        }
      }).filter(comp => void 0 !== comp), children.push(...dataComponents));
      return this.renderContainer(groupComponent, children);
    }
    render() {
      const {animationWhitelist, role} = VictoryCandlestick, props = _victoryCore.Helpers.modifyProps(this.props, fallbackProps, role);
      if (this.shouldAnimate()) {
        return this.animateComponent(props, animationWhitelist);
      }
      var children = this.renderCandleData(props, this.shouldRenderDatum);
      children = props.standalone ? this.renderContainer(props.containerComponent, children) : children;
      return _victoryCore.UserProps.withSafeUserProps(children, props);
    }
  }
  VictoryCandlestickBase.animationWhitelist = VictoryCandlestickBase.$jscomp$static$init$602654661$0$animationWhitelist();
  VictoryCandlestickBase.displayName = VictoryCandlestickBase.$jscomp$static$init$602654661$1$displayName();
  VictoryCandlestickBase.role = VictoryCandlestickBase.$jscomp$static$init$602654661$2$role();
  VictoryCandlestickBase.defaultTransitions = VictoryCandlestickBase.$jscomp$static$init$602654661$3$defaultTransitions();
  VictoryCandlestickBase.defaultProps = VictoryCandlestickBase.$jscomp$static$init$602654661$4$defaultProps();
  VictoryCandlestickBase.expectedComponents = VictoryCandlestickBase.$jscomp$static$init$602654661$5$expectedComponents();
  const VictoryCandlestick = exports.VictoryCandlestick = (0,_victoryCore.addEvents)(VictoryCandlestickBase, {components:[{name:"lowLabels"}, {name:"highLabels"}, {name:"openLabels"}, {name:"closeLabels"}, {name:"labels"}, {name:"data"}, {name:"parent", index:"parent"}]});
};

//# sourceMappingURL=module$node_modules$victory_candlestick$lib$victory_candlestick.js.map
