{
"version":3,
"file":"module$node_modules$lodash$_baseRest.js",
"lineCount":7,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,GAAyD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAC7FC,WAAWH,OAAA,CAAQ,qCAAR,CADkF,EAE7FI,WAAWJ,OAAA,CAAQ,sCAAR,CAFkF,EAG7FK,cAAcL,OAAA,CAAQ,yCAAR,CAH+E;AAiBjGC,QAAOC,CAAAA,OAAP,GAJAI,QAAiB,CAACC,IAAD,EAAOC,KAAP,CAAc;AAC7B,WAAOH,WAAA,CAAYD,QAAA,CAASG,IAAT,EAAeC,KAAf,EAAsBL,QAAtB,CAAZ,EAA6CI,IAA7C,GAAoD,EAApD,CAAP;AAD6B,GAI/B;AAjBiG,CAAjG;;",
"sources":["node_modules/lodash/_baseRest.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseRest\"] = function(global,require,module,exports) {\nvar identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n\n};"],
"names":["shadow$provide","global","require","module","exports","identity","overRest","setToString","baseRest","func","start"]
}
