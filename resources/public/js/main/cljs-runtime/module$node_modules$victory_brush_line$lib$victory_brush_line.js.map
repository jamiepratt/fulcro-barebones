{
"version":3,
"file":"module$node_modules$victory_brush_line$lib$victory_brush_line.js",
"lineCount":208,
"mappings":"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",
"sources":["node_modules/victory-brush-line/lib/victory-brush-line.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$victory_brush_line$lib$victory_brush_line\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VictoryBrushLine = void 0;\nvar _pick2 = _interopRequireDefault(require(\"lodash/pick\"));\nvar _defaults2 = _interopRequireDefault(require(\"lodash/defaults\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _victoryCore = require(\"victory-core\");\nvar _reactFastCompare = _interopRequireDefault(require(\"react-fast-compare\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst SMALL_NUMBER = 1 / Number.MAX_SAFE_INTEGER;\nconst getScale = props => {\n  const {\n    scale = {},\n    dimension = \"x\"\n  } = props;\n  if (scale[dimension]) {\n    return scale[dimension];\n  }\n  const fallbackScale = _victoryCore.Scale.getBaseScale(props, dimension);\n  const range = _victoryCore.Helpers.getRange(props, dimension);\n  const domain = _victoryCore.Domain.getDomainFromProps(props, dimension) || [0, 1];\n  fallbackScale.range(range).domain(domain);\n  return fallbackScale;\n};\nconst getDimension = props => {\n  const {\n    horizontal,\n    dimension = \"x\"\n  } = props;\n  if (!horizontal) {\n    return dimension;\n  }\n  return dimension === \"x\" ? \"y\" : \"x\";\n};\nconst toRange = (props, domain) => {\n  const scale = getScale(props);\n  return [scale(Math.min(...domain)), scale(Math.max(...domain))];\n};\nconst toDomain = (props, range) => {\n  const scale = getScale(props);\n  return [scale.invert(Math.min(...range)), scale.invert(Math.max(...range))];\n};\nconst getFullRange = props => {\n  const scale = getScale(props);\n  return scale.range();\n};\nconst getFullDomain = props => {\n  const scale = getScale(props);\n  return scale.domain();\n};\nconst withinBound = (value, bound) => {\n  return value >= _victoryCore.Collection.getMinValue(bound) && value <= _victoryCore.Collection.getMaxValue(bound);\n};\nconst getBrushDomain = (brushDomain, fullDomain) => {\n  if (brushDomain) {\n    const brushMin = _victoryCore.Collection.getMinValue(brushDomain);\n    const brushMax = _victoryCore.Collection.getMaxValue(brushDomain);\n    const domainMin = _victoryCore.Collection.getMinValue(fullDomain);\n    const domainMax = _victoryCore.Collection.getMaxValue(fullDomain);\n    const defaultMin = brushMin < domainMin ? domainMin : Number(domainMax) - SMALL_NUMBER;\n    const defaultMax = brushMax > domainMax ? domainMax : Number(domainMin) + SMALL_NUMBER;\n    const min = withinBound(brushMin, fullDomain) ? brushMin : defaultMin;\n    const max = withinBound(brushMax, fullDomain) ? brushMax : defaultMax;\n    return [min, max];\n  }\n  return fullDomain;\n};\nconst getActiveHandle = (props, position, range) => {\n  const width = props.handleWidth / 2;\n  const dimension = getDimension(props);\n  const getHandle = type => {\n    const base = {\n      min: dimension === \"x\" ? Math.min(...range) : Math.max(...range),\n      max: dimension === \"x\" ? Math.max(...range) : Math.min(...range)\n    };\n    return [base[type] - width, base[type] + width];\n  };\n  const active = [\"min\", \"max\"].reduce((memo, type) => {\n    memo[type] = withinBound(position, getHandle(type)) ? type : undefined;\n    return memo;\n  }, {});\n  return active.min && active.max ? \"both\" : active.min || active.max;\n};\nconst getMinimumDomain = () => {\n  return [0, SMALL_NUMBER];\n};\nconst panBox = (props, position) => {\n  const {\n    brushDomain,\n    startPosition\n  } = props;\n  const range = toRange(props, brushDomain);\n  const fullRange = getFullRange(props);\n  const size = Math.abs(range[1] - range[0]);\n  const globalMin = Math.min(...fullRange);\n  const globalMax = Math.max(...fullRange);\n  const delta = startPosition ? startPosition - position : 0;\n  const min = Math.min(...range) - delta;\n  const max = Math.max(...range) - delta;\n  const constrainedMin = min > globalMax - size ? globalMax - size : Math.max(min, globalMin);\n  const constrainedMax = max < globalMin + size ? globalMin + size : Math.min(max, globalMax);\n  return [constrainedMin, constrainedMax];\n};\nconst fallbackProps = {\n  brushAreaStyle: {\n    stroke: \"none\",\n    fill: \"black\",\n    opacity: _ref => {\n      let {\n        active\n      } = _ref;\n      return active ? 0.2 : 0.1;\n    } // eslint-disable-line no-magic-numbers\n  },\n  brushStyle: {\n    pointerEvents: \"none\",\n    stroke: \"none\",\n    fill: \"black\",\n    opacity: _ref2 => {\n      let {\n        active\n      } = _ref2;\n      return active ? 0.4 : 0.3;\n    } // eslint-disable-line no-magic-numbers\n  },\n  handleStyle: {\n    pointerEvents: \"none\",\n    stroke: \"none\",\n    fill: \"none\"\n  }\n};\nclass VictoryBrushLine extends _react.default.Component {\n  static defaultProps = {\n    allowDrag: true,\n    allowDraw: true,\n    allowResize: true,\n    brushAreaComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.Box, null),\n    brushComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.Box, null),\n    groupComponent: /*#__PURE__*/_react.default.createElement(\"g\", null),\n    handleComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.Box, null),\n    handleWidth: 10,\n    lineComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.LineSegment, null),\n    width: 10\n  };\n  static defaultEvents = function (props) {\n    return props.disable ? undefined : [{\n      target: props.type,\n      eventHandlers: {\n        onMouseEnter: (evt, targetProps) => {\n          evt.preventDefault();\n          const {\n            allowResize,\n            brushDomain\n          } = targetProps;\n          const dimension = getDimension(targetProps);\n          const parentSVG = targetProps.parentSVG || _victoryCore.Selection.getParentSVG(evt);\n          const position = _victoryCore.Selection.getSVGEventCoordinates(evt, parentSVG)[dimension];\n          const fullDomain = getFullDomain(targetProps);\n          const currentDomain = getBrushDomain(brushDomain, fullDomain);\n          const range = toRange(targetProps, currentDomain);\n          const activeHandle = allowResize && getActiveHandle(targetProps, position, range);\n          const activeBrushes = {\n            brushArea: !targetProps.brushDomain,\n            brush: withinBound(position, range) && !(0, _reactFastCompare.default)(fullDomain, currentDomain),\n            minHandle: activeHandle === \"min\" || activeHandle === \"both\",\n            maxHandle: activeHandle === \"min\" || activeHandle === \"both\"\n          };\n          return [{\n            mutation: () => ({\n              activeBrushes,\n              brushDomain: targetProps.brushDomain,\n              parentSVG\n            })\n          }];\n        },\n        onMouseDown: (evt, targetProps) => {\n          evt.preventDefault();\n          const {\n            allowResize,\n            allowDrag,\n            allowDraw,\n            activeBrushes,\n            brushDomain\n          } = targetProps;\n          const dimension = getDimension(targetProps);\n\n          // Don't trigger events for static brushes\n          if (!allowResize && !allowDrag) {\n            return [];\n          }\n          const fullDomain = getFullDomain(targetProps);\n          const currentDomain = getBrushDomain(brushDomain, fullDomain);\n          const parentSVG = targetProps.parentSVG || _victoryCore.Selection.getParentSVG(evt);\n          const position = _victoryCore.Selection.getSVGEventCoordinates(evt, parentSVG)[dimension];\n          const range = toRange(targetProps, currentDomain);\n          const activeHandle = allowResize && getActiveHandle(targetProps, position, range);\n          // If the event occurs in any of the handle regions, start a resize\n          if (activeHandle) {\n            return [{\n              mutation: () => {\n                return {\n                  parentSVG,\n                  isSelecting: true,\n                  activeHandle,\n                  brushDomain: currentDomain,\n                  startPosition: position,\n                  activeBrushes\n                };\n              }\n            }];\n          } else if (withinBound(position, range) && !(0, _reactFastCompare.default)(fullDomain, currentDomain)) {\n            // if the event occurs within a selected region start a panning event, unless the whole\n            // domain is selected\n            return [{\n              mutation: () => ({\n                isPanning: allowDrag,\n                startPosition: position,\n                brushDomain: currentDomain,\n                activeBrushes,\n                parentSVG\n              })\n            }];\n          }\n          // if the event occurs outside the region, or if the whole domain is selected,\n          // start a new selection\n          return allowDraw ? [{\n            mutation: () => ({\n              isSelecting: allowResize,\n              brushDomain: null,\n              startPosition: position,\n              activeBrushes,\n              parentSVG\n            })\n          }] : [];\n        },\n        // eslint-disable-next-line max-statements, complexity\n        onMouseMove: (evt, targetProps) => {\n          const {\n            isPanning,\n            isSelecting,\n            allowResize,\n            allowDrag,\n            onBrushDomainChange,\n            brushDomain\n          } = targetProps;\n          const dimension = getDimension(targetProps);\n          if (isPanning || isSelecting) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n          const parentSVG = targetProps.parentSVG || _victoryCore.Selection.getParentSVG(evt);\n          const position = _victoryCore.Selection.getSVGEventCoordinates(evt, parentSVG)[dimension];\n          const fullDomain = getFullDomain(targetProps);\n          const domain = getBrushDomain(brushDomain, fullDomain);\n          const initialRange = toRange(targetProps, domain);\n          const activeHandle = getActiveHandle(targetProps, position, initialRange);\n          const activeBrushes = {\n            brushArea: !targetProps.brushDomain,\n            brush: withinBound(position, initialRange) && !(0, _reactFastCompare.default)(fullDomain, domain),\n            minHandle: activeHandle === \"min\" || activeHandle === \"both\",\n            maxHandle: activeHandle === \"max\" || activeHandle === \"both\"\n          };\n          if (!targetProps.isPanning && !targetProps.isSelecting) {\n            return [{\n              mutation: () => ({\n                activeBrushes,\n                brushDomain: targetProps.brushDomain,\n                parentSVG\n              })\n            }];\n          }\n          if (allowDrag && isPanning) {\n            const fullRange = getFullRange(targetProps);\n            const range = panBox(targetProps, position);\n            const currentDomain = toDomain(targetProps, range);\n            const startPosition = Math.max(...range) >= Math.max(...fullRange) || Math.min(...range) <= Math.min(...fullRange) ? targetProps.startPosition : position;\n            const mutatedProps = {\n              startPosition,\n              isPanning: true,\n              brushDomain: currentDomain,\n              activeBrushes: {\n                brush: true\n              },\n              parentSVG\n            };\n            if (_victoryCore.Helpers.isFunction(onBrushDomainChange)) {\n              onBrushDomainChange(currentDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n            }\n            return [{\n              mutation: () => mutatedProps\n            }];\n          } else if (allowResize && isSelecting) {\n            let currentDomain = brushDomain || getMinimumDomain();\n            const range = toRange(targetProps, currentDomain);\n            const oppositeHandle = targetProps.activeHandle === \"min\" ? \"max\" : \"min\";\n            const handle = targetProps.activeHandle && getActiveHandle(targetProps, position, range) === \"both\" ? oppositeHandle : targetProps.activeHandle;\n            if (!handle) {\n              currentDomain = toDomain(targetProps, [targetProps.startPosition, position]);\n            } else {\n              const rangeMax = dimension === \"x\" ? Math.max(...range) : Math.min(...range);\n              const rangeMin = dimension === \"x\" ? Math.min(...range) : Math.max(...range);\n              const min = handle === \"max\" ? rangeMin : position;\n              const max = handle === \"min\" ? rangeMax : position;\n              currentDomain = toDomain(targetProps, [min, max]);\n            }\n            const mutatedProps = {\n              brushDomain: currentDomain,\n              startPosition: targetProps.startPosition,\n              isSelecting,\n              activeHandle: handle,\n              parentSVG,\n              activeBrushes: {\n                brush: true,\n                minHandle: activeHandle === \"min\",\n                maxHandle: activeHandle === \"max\"\n              }\n            };\n            if (_victoryCore.Helpers.isFunction(onBrushDomainChange)) {\n              onBrushDomainChange(currentDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n            }\n            return [{\n              mutation: () => mutatedProps\n            }];\n          }\n          return [];\n        },\n        onMouseUp: (evt, targetProps) => {\n          const {\n            onBrushDomainChange,\n            brushDomain,\n            allowResize,\n            activeBrushes\n          } = targetProps;\n          // if the mouse hasn't moved since a mouseDown event, select the whole domain region\n          const mutatedProps = {\n            isPanning: false,\n            isSelecting: false,\n            activeHandle: null,\n            startPosition: null,\n            brushDomain,\n            activeBrushes\n          };\n          if (allowResize && _victoryCore.Helpers.isFunction(onBrushDomainChange)) {\n            onBrushDomainChange(brushDomain, (0, _defaults2.default)({}, mutatedProps, targetProps));\n          }\n          return [{\n            mutation: () => mutatedProps\n          }];\n        },\n        onMouseLeave: (evt, targetProps) => {\n          const {\n            brushDomain\n          } = targetProps;\n          return [{\n            mutation: () => ({\n              isPanning: false,\n              isSelecting: false,\n              activeHandle: null,\n              startPosition: null,\n              brushDomain,\n              activeBrushes: {}\n            })\n          }];\n        }\n      }\n    }];\n  };\n  getRectDimensions(props, brushWidth, domain) {\n    const {\n      brushDomain\n    } = props;\n    const dimension = getDimension(props);\n    const range = toRange(props, domain || getBrushDomain(brushDomain, getFullDomain(props)));\n    const coordinates = dimension === \"x\" ? {\n      y1: props.y1,\n      y2: props.y2,\n      x1: Math.min(...range),\n      x2: Math.max(...range)\n    } : {\n      x1: props.x1,\n      x2: props.x2,\n      y1: Math.min(...range),\n      y2: Math.max(...range)\n    };\n    const {\n      x1,\n      x2,\n      y1,\n      y2\n    } = coordinates;\n    const offset = {\n      x: dimension === \"x\" ? 0 : brushWidth / 2,\n      y: dimension === \"y\" ? 0 : brushWidth / 2\n    };\n    const x = Math.min(x1, x2) - offset.x;\n    const y = Math.min(y1, y2) - offset.y;\n    const width = Math.max(x1, x2) + offset.x - x;\n    const height = Math.max(y1, y2) + offset.y - y;\n    return {\n      x,\n      y,\n      width,\n      height\n    };\n  }\n  getHandleDimensions(props) {\n    const {\n      handleWidth,\n      x1,\n      x2,\n      y1,\n      y2,\n      brushDomain\n    } = props;\n    const dimension = getDimension(props);\n    const brushWidth = props.brushWidth || props.width;\n    const domain = getBrushDomain(brushDomain, getFullDomain(props));\n    const range = toRange(props, domain);\n    const defaultX = Math.min(x1, x2) - brushWidth / 2;\n    const defaultY = Math.min(y1, y2) - brushWidth / 2;\n    const x = {\n      min: dimension === \"x\" ? Math.min(...range) - handleWidth / 2 : defaultX,\n      max: dimension === \"x\" ? Math.max(...range) - handleWidth / 2 : defaultX\n    };\n    const y = {\n      min: dimension === \"y\" ? Math.max(...range) - handleWidth / 2 : defaultY,\n      max: dimension === \"y\" ? Math.min(...range) - handleWidth / 2 : defaultY\n    };\n    const width = dimension === \"x\" ? handleWidth : brushWidth;\n    const height = dimension === \"x\" ? brushWidth : handleWidth;\n    return {\n      min: {\n        x: x.min,\n        y: y.min,\n        width,\n        height\n      },\n      max: {\n        x: x.max,\n        y: y.max,\n        width,\n        height\n      }\n    };\n  }\n  getCursor(props) {\n    const {\n      activeBrushes = {}\n    } = props;\n    const dimension = getDimension(props);\n    if (activeBrushes.minHandle || activeBrushes.maxHandle) {\n      return dimension === \"x\" ? \"ew-resize\" : \"ns-resize\";\n    } else if (activeBrushes.brush) {\n      return \"move\";\n    }\n    return \"crosshair\";\n  }\n  renderHandles(props) {\n    const {\n      handleComponent,\n      handleStyle,\n      id,\n      brushDomain,\n      datum = {},\n      activeBrushes = {}\n    } = props;\n    if (!brushDomain) {\n      return null;\n    }\n    const handleDimensions = this.getHandleDimensions(props);\n    const style = Object.assign({}, fallbackProps.handleStyle, handleStyle);\n    const minDatum = Object.assign({\n      handleValue: _victoryCore.Collection.getMinValue(brushDomain)\n    }, datum);\n    const maxDatum = Object.assign({\n      handleValue: _victoryCore.Collection.getMaxValue(brushDomain)\n    }, datum);\n    const minHandleProps = Object.assign({\n      key: `${id}-min`,\n      style: _victoryCore.Helpers.evaluateStyle(style, {\n        datum: minDatum,\n        active: activeBrushes.minHandle\n      })\n    }, handleDimensions.min);\n    const maxHandleProps = Object.assign({\n      key: `${id}-max`,\n      style: _victoryCore.Helpers.evaluateStyle(style, {\n        datum: maxDatum,\n        active: activeBrushes.maxHandle\n      })\n    }, handleDimensions.max);\n    return [/*#__PURE__*/_react.default.cloneElement(handleComponent, minHandleProps), /*#__PURE__*/_react.default.cloneElement(handleComponent, maxHandleProps)];\n  }\n  renderBrush(props) {\n    const {\n      brushComponent,\n      brushStyle,\n      activeBrushes = {},\n      datum = {},\n      brushDomain\n    } = props;\n    if (!brushDomain) {\n      return null;\n    }\n    const brushWidth = props.brushWidth || props.width;\n    const rectDimensions = this.getRectDimensions(props, brushWidth);\n    const baseStyle = Object.assign({}, fallbackProps.brushStyle, brushStyle);\n    const style = _victoryCore.Helpers.evaluateStyle(baseStyle, {\n      datum,\n      active: activeBrushes.brush\n    });\n    const brushProps = Object.assign({\n      style\n    }, rectDimensions);\n    return /*#__PURE__*/_react.default.cloneElement(brushComponent, brushProps);\n  }\n  renderBrushArea(props) {\n    const {\n      brushAreaComponent,\n      brushAreaStyle,\n      activeBrushes = {},\n      datum = {}\n    } = props;\n    const brushAreaWidth = props.brushAreaWidth || props.width;\n    const cursor = this.getCursor(props);\n    const rectDimensions = this.getRectDimensions(props, brushAreaWidth, getFullDomain(props));\n    const baseStyle = Object.assign({\n      cursor\n    }, fallbackProps.brushAreaStyle, brushAreaStyle);\n    const style = _victoryCore.Helpers.evaluateStyle(baseStyle, {\n      datum,\n      active: activeBrushes.brushArea\n    });\n    const brushAreaProps = Object.assign({\n      style\n    }, rectDimensions);\n    return /*#__PURE__*/_react.default.cloneElement(brushAreaComponent, brushAreaProps);\n  }\n  renderLine(props) {\n    const filteredProps = (0, _pick2.default)(props, [\"x1\", \"x2\", \"y1\", \"y2\", \"datum\", \"scale\", \"active\", \"style\"]);\n    return /*#__PURE__*/_react.default.cloneElement(props.lineComponent, filteredProps);\n  }\n  render() {\n    return /*#__PURE__*/_react.default.createElement(\"g\", this.props.events, this.renderLine(this.props), this.renderBrushArea(this.props), this.renderBrush(this.props), this.renderHandles(this.props));\n  }\n}\nexports.VictoryBrushLine = VictoryBrushLine;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","VictoryBrushLine","_pick2","_defaults2","_react","_victoryCore","_reactFastCompare","SMALL_NUMBER","Number","MAX_SAFE_INTEGER","getScale","props","scale","dimension","fallbackScale","Scale","getBaseScale","range","Helpers","getRange","domain","Domain","getDomainFromProps","getDimension","horizontal","toRange","Math","min","max","toDomain","invert","withinBound","bound","Collection","getMinValue","getMaxValue","getBrushDomain","brushDomain","fullDomain","brushMin","brushMax","domainMin","domainMax","defaultMin","defaultMax","getActiveHandle","position","width","handleWidth","active","reduce","memo","type","base","undefined","panBox","startPosition","fullRange","size","abs","globalMin","globalMax","delta","constrainedMin","constrainedMax","stroke","fill","opacity","_ref","pointerEvents","_ref2","Component","allowDrag","allowDraw","allowResize","brushAreaComponent","createElement","Box","brushComponent","groupComponent","handleComponent","lineComponent","LineSegment","disable","target","eventHandlers","onMouseEnter","evt","targetProps","preventDefault","parentSVG","Selection","getParentSVG","getSVGEventCoordinates","currentDomain","activeHandle","activeBrushes","brushArea","brush","minHandle","maxHandle","mutation","onMouseDown","isSelecting","isPanning","onMouseMove","onBrushDomainChange","stopPropagation","initialRange","mutatedProps","isFunction","oppositeHandle","handle","rangeMax","rangeMin","onMouseUp","onMouseLeave","getRectDimensions","brushWidth","coordinates","y1","y2","x1","x2","x","y","height","getHandleDimensions","defaultX","defaultY","getCursor","renderHandles","handleStyle","id","datum","handleDimensions","style","assign","minDatum","handleValue","maxDatum","minHandleProps","key","evaluateStyle","maxHandleProps","cloneElement","renderBrush","brushStyle","rectDimensions","baseStyle","brushProps","renderBrushArea","brushAreaStyle","brushAreaWidth","cursor","brushAreaProps","renderLine","filteredProps","render","events"]
}
