{
"version":3,
"file":"module$node_modules$lodash$negate.js",
"lineCount":22,
"mappings":"AAAAA,cAAA,CAAA,iCAAA,GAAsD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAwC9FD,QAAOC,CAAAA,OAAP,GAhBAC,QAAe,CAACC,SAAD,CAAY;AACzB,QAAwB,UAAxB,IAAI,MAAOA,UAAX;AACE,YAAM,IAAIC,SAAJ,CAxBYC,qBAwBZ,CAAN;AADF;AAGA,WAAO,QAAQ,EAAG;AAChB,UAAIC,OAAOC,SAAX;AACA,aAAQD,IAAKE,CAAAA,MAAb;AACE,aAAK,CAAL;AAAQ,iBAAO,CAACL,SAAUM,CAAAA,IAAV,CAAe,IAAf,CAAR;AACR,aAAK,CAAL;AAAQ,iBAAO,CAACN,SAAUM,CAAAA,IAAV,CAAe,IAAf,EAAqBH,IAAA,CAAK,CAAL,CAArB,CAAR;AACR,aAAK,CAAL;AAAQ,iBAAO,CAACH,SAAUM,CAAAA,IAAV,CAAe,IAAf,EAAqBH,IAAA,CAAK,CAAL,CAArB,EAA8BA,IAAA,CAAK,CAAL,CAA9B,CAAR;AACR,aAAK,CAAL;AAAQ,iBAAO,CAACH,SAAUM,CAAAA,IAAV,CAAe,IAAf,EAAqBH,IAAA,CAAK,CAAL,CAArB,EAA8BA,IAAA,CAAK,CAAL,CAA9B,EAAuCA,IAAA,CAAK,CAAL,CAAvC,CAAR;AAJV;AAMA,aAAO,CAACH,SAAUO,CAAAA,KAAV,CAAgB,IAAhB,EAAsBJ,IAAtB,CAAR;AARgB,KAAlB;AAJyB,GAgB3B;AAxC8F,CAA9F;;",
"sources":["node_modules/lodash/negate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$negate\"] = function(global,require,module,exports) {\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n\n};"],
"names":["shadow$provide","global","require","module","exports","negate","predicate","TypeError","FUNC_ERROR_TEXT","args","arguments","length","call","apply"]
}
