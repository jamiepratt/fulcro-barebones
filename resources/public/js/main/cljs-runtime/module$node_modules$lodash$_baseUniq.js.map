{
"version":3,
"file":"module$node_modules$lodash$_baseUniq.js",
"lineCount":35,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,GAAyD,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAAA,MAC7FC,WAAWH,OAAA,CAAQ,sCAAR,CADkF,EAE7FI,gBAAgBJ,OAAA,CAAQ,2CAAR,CAF6E,EAG7FK,oBAAoBL,OAAA,CAAQ,+CAAR,CAHyE,EAI7FM,WAAWN,OAAA,CAAQ,sCAAR,CAJkF,EAK7FO,YAAYP,OAAA,CAAQ,uCAAR,CALiF,EAM7FQ,aAAaR,OAAA,CAAQ,wCAAR,CANgF;AAwEjGC,QAAOC,CAAAA,OAAP,GApDAO,QAAiB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,CAA8B;AAAA,QACzCC,QAAQ,CAAC,CADgC,EAEzCC,WAAWV,aAF8B,EAGzCW,SAASL,KAAMK,CAAAA,MAH0B,EAIzCC,WAAW,CAAA,CAJ8B,EAKzCC,SAAS,EALgC,EAMzCC,OAAOD,MANkC;AAQ7C,QAAIL,UAAJ;AACEI,cACA,GADW,CAAA,CACX,EAAAF,QAAA,GAAWT,iBAAX;AAFF,UAIK,KAvBgBc,GAuBhB,IAAIJ,MAAJ,CAAgC;AAEnC,UADIK,QACJ,GADUT,QAAA,GAAW,IAAX,GAAkBJ,SAAA,CAAUG,KAAV,CAC5B;AACE,eAAOF,UAAA,CAAWY,QAAX,CAAP;AADF;AAGAJ,cAAA,GAAW,CAAA,CAAX;AACAF,cAAA,GAAWR,QAAX;AACAY,UAAA,GAAO,IAAIf,QAAJ,EAAP;AAPmC,KAAhC;AAUHe,UAAA,GAAOP,QAAA,GAAW,EAAX,GAAgBM,MAAvB;AAVG;AAYL,KAAA,EACA,KAAA,EAAO,EAAEJ,KAAT,GAAiBE,MAAjB,CAAA,CAAyB;AAAA,UACnBM,QAAQX,KAAA,CAAMG,KAAN,CADW,EAEnBS,WAAWX,QAAA,GAAWA,QAAA,CAASU,KAAT,CAAX,GAA6BA,KAFrB;AAIvBA,WAAA,GAAST,UAAD,IAAyB,CAAzB,KAAeS,KAAf,GAA8BA,KAA9B,GAAsC,CAA9C;AACA,UAAIL,QAAJ,IAAgBM,QAAhB,KAA6BA,QAA7B,CAAuC;AAErC,aADA,IAAIC,YAAYL,IAAKH,CAAAA,MACrB,EAAOQ,SAAA,EAAP,CAAA;AACE,cAAIL,IAAA,CAAKK,SAAL,CAAJ,KAAwBD,QAAxB;AACE,qBAAS,CAAT;AADF;AADF;AAKIX,gBAAJ,IACEO,IAAKM,CAAAA,IAAL,CAAUF,QAAV,CADF;AAGAL,cAAOO,CAAAA,IAAP,CAAYH,KAAZ,CAAA;AAVqC,OAAvC;AAYUP,gBAAA,CAASI,IAAT,EAAeI,QAAf,EAAyBV,UAAzB,CAAL,KACCM,IAGJ,KAHaD,MAGb,IAFEC,IAAKM,CAAAA,IAAL,CAAUF,QAAV,CAEF,EAAAL,MAAOO,CAAAA,IAAP,CAAYH,KAAZ,CAJG;AAZL;AALuB;AAwBzB,WAAOJ,MAAP;AAjD6C,GAoD/C;AAxEiG,CAAjG;;",
"sources":["node_modules/lodash/_baseUniq.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseUniq\"] = function(global,require,module,exports) {\nvar SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n\n};"],
"names":["shadow$provide","global","require","module","exports","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","baseUniq","array","iteratee","comparator","index","includes","length","isCommon","result","seen","LARGE_ARRAY_SIZE","set","value","computed","seenIndex","push"]
}
