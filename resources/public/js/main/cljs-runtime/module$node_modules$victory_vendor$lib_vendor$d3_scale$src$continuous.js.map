{
"version":3,
"file":"module$node_modules$victory_vendor$lib_vendor$d3_scale$src$continuous.js",
"lineCount":94,
"mappings":"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",
"sources":["node_modules/victory-vendor/lib-vendor/d3-scale/src/continuous.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$victory_vendor$lib_vendor$d3_scale$src$continuous\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copy = copy;\nexports.default = continuous;\nexports.identity = identity;\nexports.transformer = transformer;\nvar _index = require(\"../../../lib-vendor/d3-array/src/index.js\");\nvar _index2 = require(\"../../../lib-vendor/d3-interpolate/src/index.js\");\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\nvar _number = _interopRequireDefault(require(\"./number.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar unit = [0, 1];\nfunction identity(x) {\n  return x;\n}\nfunction normalize(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);\n}\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function (x) {\n    return Math.max(a, Math.min(b, x));\n  };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0],\n    d1 = domain[1],\n    r0 = range[0],\n    r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n    d = new Array(j),\n    r = new Array(j),\n    i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n  return function (x) {\n    var i = (0, _index.bisect)(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\nfunction copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\nfunction transformer() {\n  var domain = unit,\n    range = unit,\n    interpolate = _index2.interpolate,\n    transform,\n    untransform,\n    unknown,\n    clamp = identity,\n    piecewise,\n    output,\n    input;\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n  scale.invert = function (y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _index2.interpolateNumber)))(y)));\n  };\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_, _number.default), rescale()) : domain.slice();\n  };\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n  scale.rangeRound = function (_) {\n    return range = Array.from(_), interpolate = _index2.interpolateRound, rescale();\n  };\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  return function (t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\nfunction continuous() {\n  return transformer()(identity, identity);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","identity","x","normalize","a","b","_constant","isNaN","NaN","clamper","t","Math","max","min","bimap","domain","range","interpolate","d0","d1","r0","r1","polymap","j","length","d","Array","r","i","slice","reverse","_index","bisect","transformer","rescale","n","clamp","piecewise","output","input","scale","unknown","map","transform","unit","_index2","untransform","invert","scale.invert","y","interpolateNumber","scale.domain","_","arguments","from","_number","scale.range","rangeRound","scale.rangeRound","interpolateRound","scale.clamp","scale.interpolate","scale.unknown","u","Object","defineProperty","value","copy","source","target","continuous"]
}
