{
"version":3,
"file":"module$node_modules$victory_core$lib$victory_util$transitions.js",
"lineCount":144,
"mappings":"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",
"sources":["node_modules/victory-core/lib/victory-util/transitions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$victory_core$lib$victory_util$transitions\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInitialTransitionState = getInitialTransitionState;\nexports.getTransitionPropsFactory = getTransitionPropsFactory;\nvar _identity2 = _interopRequireDefault(require(\"lodash/identity\"));\nvar _defaults2 = _interopRequireDefault(require(\"lodash/defaults\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction getDatumKey(datum, idx) {\n  return (datum.key || idx).toString();\n}\nfunction getKeyedData(data) {\n  return data.reduce((keyedData, datum, idx) => {\n    const key = getDatumKey(datum, idx);\n    keyedData[key] = datum;\n    return keyedData;\n  }, {});\n}\nfunction getKeyedDataDifference(a, b) {\n  let hasDifference = false;\n  const difference = Object.keys(a).reduce((_difference, key) => {\n    if (!(key in b)) {\n      hasDifference = true;\n      _difference[key] = true;\n    }\n    return _difference;\n  }, {});\n  return hasDifference && difference;\n}\n\n/**\n * Calculate which data-points exist in oldData and not nextData -\n * these are the `exiting` data-points.  Also calculate which\n * data-points exist in nextData and not oldData - these are the\n * `entering` data-points.\n *\n * @param  {Array} oldData   this.props.data Array\n * @param  {Array} nextData  this.props.data Array\n *\n * @return {Object}          Object with `entering` and `exiting` properties.\n *                           entering[datum.key] will be true if the data is\n *                           entering, and similarly for `exiting`.\n */\nfunction getNodeTransitions(oldData, nextData) {\n  const oldDataKeyed = oldData && getKeyedData(oldData);\n  const nextDataKeyed = nextData && getKeyedData(nextData);\n  return {\n    entering: oldDataKeyed && getKeyedDataDifference(nextDataKeyed, oldDataKeyed),\n    exiting: nextDataKeyed && getKeyedDataDifference(oldDataKeyed, nextDataKeyed)\n  };\n}\nfunction getChildData(child) {\n  if (child.type && child.type.getData) {\n    return child.type.getData(child.props);\n  }\n  return child.props && child.props.data || false;\n}\n\n/**\n * If a parent component has animation enabled, calculate the transitions\n * for any data of any child component that supports data transitions.\n * Data transitions are defined as any two datasets where data nodes exist\n * in the first set and not the second, in the second and not the first,\n * or both.\n *\n * @param  {Children}  oldChildren   this.props.children from old props\n * @param  {Children}  nextChildren  this.props.children from next props\n *\n * @return {Object}                  Object with the following properties:\n *                                    - nodesWillExit\n *                                    - nodesWillEnter\n *                                    - childrenTransitions\n *                                    - nodesShouldEnter\n */\nfunction getInitialTransitionState(oldChildren, nextChildren) {\n  let nodesWillExit = false;\n  let nodesWillEnter = false;\n  const getTransition = (oldChild, newChild) => {\n    if (!newChild || oldChild.type !== newChild.type) {\n      return {};\n    }\n    const {\n      entering,\n      exiting\n    } = getNodeTransitions(getChildData(oldChild), getChildData(newChild)) || {};\n    nodesWillExit = nodesWillExit || !!exiting;\n    nodesWillEnter = nodesWillEnter || !!entering;\n    return {\n      entering: entering || false,\n      exiting: exiting || false\n    };\n  };\n  const getTransitionsFromChildren = (old, next) => {\n    return old.map((child, idx) => {\n      if (child && child.props && child.props.children && next[idx]) {\n        return getTransitionsFromChildren(_react.default.Children.toArray(old[idx].props.children), _react.default.Children.toArray(next[idx].props.children));\n      }\n      // get Transition entering and exiting nodes\n      return getTransition(child, next[idx]);\n    });\n  };\n  const childrenTransitions = getTransitionsFromChildren(_react.default.Children.toArray(oldChildren), _react.default.Children.toArray(nextChildren));\n  return {\n    nodesWillExit,\n    nodesWillEnter,\n    childrenTransitions,\n    // TODO: This may need to be refactored for the following situation.\n    //       The component receives new props, and the data provided\n    //       is a perfect match for the previous data and domain except\n    //       for new nodes. In this case, we wouldn't want a delay before\n    //       the new nodes appear.\n    nodesShouldEnter: false\n  };\n}\nfunction getInitialChildProps(animate, data) {\n  const after = animate.onEnter && animate.onEnter.after ? animate.onEnter.after : _identity2.default;\n  return {\n    data: data.map((datum, idx) => Object.assign({}, datum, after(datum, idx, data)))\n  };\n}\n\n// eslint-disable-next-line max-params\nfunction getChildBeforeLoad(animate, child, data, cb) {\n  const newAnimate = Object.assign({}, animate, {\n    onEnd: cb\n  });\n  if (newAnimate && newAnimate.onLoad && !newAnimate.onLoad.duration) {\n    return {\n      animate: newAnimate,\n      data\n    };\n  }\n  const before = newAnimate.onLoad && newAnimate.onLoad.before ? newAnimate.onLoad.before : _identity2.default;\n  // If nodes need to exit, transform them with the provided onLoad.before function.\n  const newData = data.map((datum, idx) => {\n    return Object.assign({}, datum, before(datum, idx, data));\n  });\n  return {\n    animate: newAnimate,\n    data: newData,\n    clipWidth: 0\n  };\n}\n\n// eslint-disable-next-line max-params\nfunction getChildOnLoad(animate, data, cb) {\n  const newAnimate = Object.assign({}, animate, {\n    onEnd: cb\n  });\n  let newData = data;\n  if (newAnimate && newAnimate.onLoad && !newAnimate.onLoad.duration) {\n    return {\n      animate,\n      data\n    };\n  }\n  const after = animate.onLoad && animate.onLoad.after ? animate.onLoad.after : _identity2.default;\n  // If nodes need to exit, transform them with the provided onLoad.after function.\n  newData = data.map((datum, idx) => {\n    return Object.assign({}, datum, after(datum, idx, data));\n  });\n  return {\n    animate: newAnimate,\n    data: newData\n  };\n}\n\n// eslint-disable-next-line max-params, max-len\nfunction getChildPropsOnExit(animate, child, data, exitingNodes, cb) {\n  // Whether or not _this_ child has exiting nodes, we want the exit-\n  // transition for all children to have the same duration, delay, etc.\n  const onExit = animate && animate.onExit;\n  const newAnimate = Object.assign({}, animate, onExit);\n  let newData = data;\n  if (exitingNodes) {\n    // After the exit transition occurs, trigger the animations for\n    // nodes that are neither exiting nor entering.\n    animate.onEnd = cb;\n    const before = animate.onExit && animate.onExit.before ? animate.onExit.before : _identity2.default;\n    // If nodes need to exit, transform them with the provided onExit.before function.\n    newData = data.map((datum, idx) => {\n      const key = (datum.key || idx).toString();\n      return exitingNodes[key] ? Object.assign({}, datum, before(datum, idx, data)) : datum;\n    });\n  }\n  return {\n    animate: newAnimate,\n    data: newData\n  };\n}\n\n// eslint-disable-next-line max-params,max-len\nfunction getChildPropsBeforeEnter(animate, child, data, enteringNodes, cb) {\n  let newAnimate = animate;\n  let newData = data;\n  if (enteringNodes) {\n    // Perform a normal animation here, except - when it finishes - trigger\n    // the transition for entering nodes.\n    newAnimate = Object.assign({}, animate, {\n      onEnd: cb\n    });\n    const before = animate.onEnter && animate.onEnter.before ? animate.onEnter.before : _identity2.default;\n    // We want the entering nodes to be included in the transition target\n    // domain.  However, we may not want these nodes to be displayed initially,\n    // so perform the `onEnter.before` transformation on each node.\n    newData = data.map((datum, idx) => {\n      const key = (datum.key || idx).toString();\n      return enteringNodes[key] ? Object.assign({}, datum, before(datum, idx, data)) : datum;\n    });\n  }\n  return {\n    animate: newAnimate,\n    data: newData\n  };\n}\n\n// eslint-disable-next-line max-params, max-len\nfunction getChildPropsOnEnter(animate, data, enteringNodes, cb) {\n  // Whether or not _this_ child has entering nodes, we want the entering-\n  // transition for all children to have the same duration, delay, etc.\n  const onEnter = animate && animate.onEnter;\n  const newAnimate = Object.assign({}, animate, onEnter);\n  let newData = data;\n  if (enteringNodes) {\n    // Old nodes have been transitioned to their new values, and the\n    // domain should encompass the nodes that will now enter. So perform\n    // the `onEnter.after` transformation on each node.\n    newAnimate.onEnd = cb;\n    const after = newAnimate.onEnter && newAnimate.onEnter.after ? newAnimate.onEnter.after : _identity2.default;\n    newData = data.map((datum, idx) => {\n      const key = getDatumKey(datum, idx);\n      return enteringNodes[key] ? Object.assign({}, datum, after(datum, idx, data)) : datum;\n    });\n  }\n  return {\n    animate: newAnimate,\n    data: newData\n  };\n}\n\n/**\n * getTransitionPropsFactory - putting the Java in JavaScript.  This will return a\n * function that returns prop transformations for a child, given that child's props\n * and its index in the parent's children array.\n *\n * In particular, this will include an `animate` object that is set appropriately\n * so that each child will be synchronized for each stage of a transition\n * animation.  It will also include a transformed `data` object, where each datum\n * is transformed by `animate.onExit` and `animate.onEnter` `before` and `after`\n * functions.\n *\n * @param  {Object}  props       `this.props` for the parent component.\n * @param  {Object} state        `this.state` for the parent component.\n * @param  {Function} setState    Function that, when called, will `this.setState` on\n *                                 the parent component with the provided object.\n *\n * @return {Function}              Child-prop transformation function.\n */\nfunction getTransitionPropsFactory(props, state, setState) {\n  const nodesWillExit = state && state.nodesWillExit;\n  const nodesWillEnter = state && state.nodesWillEnter;\n  const nodesShouldEnter = state && state.nodesShouldEnter;\n  const nodesShouldLoad = state && state.nodesShouldLoad;\n  const nodesDoneLoad = state && state.nodesDoneLoad;\n  const childrenTransitions = state && state.childrenTransitions || [];\n  const transitionDurations = {\n    enter: props.animate && props.animate.onEnter && props.animate.onEnter.duration,\n    exit: props.animate && props.animate.onExit && props.animate.onExit.duration,\n    load: props.animate && props.animate.onLoad && props.animate.onLoad.duration,\n    move: props.animate && props.animate.duration\n  };\n  const onLoad = (child, data, animate) => {\n    if (nodesShouldLoad) {\n      return getChildOnLoad(animate, data, () => {\n        setState({\n          nodesShouldLoad: false,\n          nodesDoneLoad: true\n        });\n      });\n    }\n    return getChildBeforeLoad(animate, child, data, () => {\n      setState({\n        nodesDoneLoad: true\n      });\n    });\n  };\n\n  // eslint-disable-next-line max-params\n  const onExit = (nodes, child, data, animate) => {\n    return getChildPropsOnExit(animate, child, data, nodes, () => {\n      setState({\n        nodesWillExit: false\n      });\n    });\n  };\n\n  // eslint-disable-next-line max-params\n  const onEnter = (nodes, child, data, animate) => {\n    if (nodesShouldEnter) {\n      return getChildPropsOnEnter(animate, data, nodes, () => {\n        setState({\n          nodesWillEnter: false\n        });\n      });\n    }\n    return getChildPropsBeforeEnter(animate, child, data, nodes, () => {\n      setState({\n        nodesShouldEnter: true\n      });\n    });\n  };\n  const getChildTransitionDuration = function (child, type) {\n    const animate = child.props.animate;\n    if (!child.type) {\n      return {};\n    }\n    const defaultTransitions = child.props && child.props.polar ? child.type.defaultPolarTransitions || child.type.defaultTransitions : child.type.defaultTransitions;\n    if (defaultTransitions) {\n      const animationDuration = animate[type] && animate[type].duration;\n      return animationDuration !== undefined ? animationDuration : defaultTransitions[type] && defaultTransitions[type].duration;\n    }\n    return {};\n  };\n\n  // eslint-disable-next-line max-statements, complexity, max-len\n  return function getTransitionProps(child, index) {\n    const data = getChildData(child) || [];\n    const animate = (0, _defaults2.default)({}, props.animate, child.props.animate);\n    const defaultTransitions = child.props.polar ? child.type.defaultPolarTransitions || child.type.defaultTransitions : child.type.defaultTransitions;\n    animate.onExit = (0, _defaults2.default)({}, animate.onExit, defaultTransitions && defaultTransitions.onExit);\n    animate.onEnter = (0, _defaults2.default)({}, animate.onEnter, defaultTransitions && defaultTransitions.onEnter);\n    animate.onLoad = (0, _defaults2.default)({}, animate.onLoad, defaultTransitions && defaultTransitions.onLoad);\n    const childTransitions = childrenTransitions[index] || childrenTransitions[0];\n    if (!nodesDoneLoad) {\n      // should do onLoad animation\n      const load = transitionDurations.load !== undefined ? transitionDurations.load : getChildTransitionDuration(child, \"onLoad\");\n      const animation = {\n        duration: load\n      };\n      return onLoad(child, data, Object.assign({}, animate, animation));\n    } else if (nodesWillExit) {\n      const exitingNodes = childTransitions && childTransitions.exiting;\n      const exit = transitionDurations.exit !== undefined ? transitionDurations.exit : getChildTransitionDuration(child, \"onExit\");\n      // if nodesWillExit, but this child has no exiting nodes, set a delay instead of a duration\n      const animation = exitingNodes ? {\n        duration: exit\n      } : {\n        delay: exit\n      };\n      return onExit(exitingNodes, child, data, Object.assign({}, animate, animation));\n    } else if (nodesWillEnter) {\n      const enteringNodes = childTransitions && childTransitions.entering;\n      const enter = transitionDurations.enter !== undefined ? transitionDurations.enter : getChildTransitionDuration(child, \"onEnter\");\n      const move = transitionDurations.move !== undefined ? transitionDurations.move : child.props.animate && child.props.animate.duration;\n      const animation = {\n        duration: nodesShouldEnter && enteringNodes ? enter : move\n      };\n      return onEnter(enteringNodes, child, data, Object.assign({}, animate, animation));\n    } else if (!state && animate && animate.onExit) {\n      // This is the initial render, and nodes may enter when props change. Because\n      // animation interpolation is determined by old- and next- props, data may need\n      // to be augmented with certain properties.\n      //\n      // For example, it may be desired that exiting nodes go from `opacity: 1` to\n      // `opacity: 0`. Without setting this on a per-datum basis, the interpolation\n      // might go from `opacity: undefined` to `opacity: 0`, which would result in\n      // interpolated `opacity: NaN` values.\n      //\n      return getInitialChildProps(animate, data);\n    }\n    return {\n      animate,\n      data\n    };\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","getKeyedData","data","reduce","keyedData","datum","idx","toString","key","getKeyedDataDifference","a","b","hasDifference","difference","Object","keys","_difference","getChildData","child","type","getData","props","getInitialChildProps","animate","after","onEnter","_identity2","map","assign","getChildBeforeLoad","cb","newAnimate","onEnd","onLoad","duration","before","newData","clipWidth","getChildOnLoad","getChildPropsOnExit","exitingNodes","onExit","getChildPropsBeforeEnter","enteringNodes","getChildPropsOnEnter","defineProperty","value","getInitialTransitionState","oldChildren","nextChildren","nodesWillExit","nodesWillEnter","getTransitionsFromChildren","old","next","children","_react","Children","toArray","newChild","oldDataKeyed","oldData","nextDataKeyed","nextData","entering","exiting","childrenTransitions","nodesShouldEnter","getTransitionPropsFactory","state","setState","nodesShouldLoad","nodesDoneLoad","nodes","getChildTransitionDuration","defaultTransitions","polar","defaultPolarTransitions","animationDuration","undefined","getTransitionProps","index","_defaults2","childTransitions","exit","animation","delay","enter","move","load"]
}
