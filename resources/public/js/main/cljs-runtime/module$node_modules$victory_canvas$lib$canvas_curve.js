shadow$provide.module$node_modules$victory_canvas$lib$canvas_curve = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.CanvasCurve = void 0;
  var _react = function(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }(require("module$node_modules$react$index")), _victoryCore = require("module$node_modules$victory_core$lib$index"), _useCanvasContext = require("module$node_modules$victory_canvas$lib$hooks$use_canvas_context");
  exports.CanvasCurve = props => {
    const {canvasRef, clear, clip} = (0,_useCanvasContext.useCanvasContext)(), {style, data} = props, {stroke, strokeWidth} = style, draw = _react.default.useCallback(ctx => {
      const line = _victoryCore.LineHelpers.getLineFunction(props);
      ctx.strokeStyle = stroke;
      ctx.lineWidth = strokeWidth;
      line.context(ctx)(data);
      ctx.stroke();
    }, [data, props, stroke, strokeWidth]);
    _react.default.useEffect(() => {
      const ctx = canvasRef.current?.getContext("2d");
      ctx && (clear(ctx), draw(ctx), clip(ctx));
    }, [canvasRef, draw, clear, clip]);
    return null;
  };
};

//# sourceMappingURL=module$node_modules$victory_canvas$lib$canvas_curve.js.map
