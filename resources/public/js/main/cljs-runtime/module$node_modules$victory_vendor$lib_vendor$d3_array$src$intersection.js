shadow$provide.module$node_modules$victory_vendor$lib_vendor$d3_array$src$intersection = function(global, require, module, exports) {
  function set(values) {
    return values instanceof _index.InternSet ? values : new _index.InternSet(values);
  }
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.default = function(values, ...others) {
    values = new _index.InternSet(values);
    others = others.map(set);
    a: for (const value of values) {
      for (const other of others) {
        if (!other.has(value)) {
          values.delete(value);
          continue a;
        }
      }
    }
    return values;
  };
  var _index = require("module$node_modules$victory_vendor$lib_vendor$internmap$src$index");
};

//# sourceMappingURL=module$node_modules$victory_vendor$lib_vendor$d3_array$src$intersection.js.map
